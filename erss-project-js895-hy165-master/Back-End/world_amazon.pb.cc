// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: world_amazon.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "world_amazon.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* AProduct_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AProduct_reflection_ = NULL;
const ::google::protobuf::Descriptor* AInitWarehouse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AInitWarehouse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AConnect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AConnect_reflection_ = NULL;
const ::google::protobuf::Descriptor* AConnected_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AConnected_reflection_ = NULL;
const ::google::protobuf::Descriptor* APack_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  APack_reflection_ = NULL;
const ::google::protobuf::Descriptor* APacked_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  APacked_reflection_ = NULL;
const ::google::protobuf::Descriptor* ALoaded_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ALoaded_reflection_ = NULL;
const ::google::protobuf::Descriptor* APutOnTruck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  APutOnTruck_reflection_ = NULL;
const ::google::protobuf::Descriptor* APurchaseMore_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  APurchaseMore_reflection_ = NULL;
const ::google::protobuf::Descriptor* AErr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AErr_reflection_ = NULL;
const ::google::protobuf::Descriptor* AQuery_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AQuery_reflection_ = NULL;
const ::google::protobuf::Descriptor* APackage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  APackage_reflection_ = NULL;
const ::google::protobuf::Descriptor* ACommands_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ACommands_reflection_ = NULL;
const ::google::protobuf::Descriptor* AResponses_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AResponses_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_world_5famazon_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_world_5famazon_2eproto() {
  protobuf_AddDesc_world_5famazon_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "world_amazon.proto");
  GOOGLE_CHECK(file != NULL);
  AProduct_descriptor_ = file->message_type(0);
  static const int AProduct_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AProduct, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AProduct, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AProduct, count_),
  };
  AProduct_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AProduct_descriptor_,
      AProduct::default_instance_,
      AProduct_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AProduct, _has_bits_[0]),
      -1,
      -1,
      sizeof(AProduct),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AProduct, _internal_metadata_),
      -1);
  AInitWarehouse_descriptor_ = file->message_type(1);
  static const int AInitWarehouse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AInitWarehouse, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AInitWarehouse, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AInitWarehouse, y_),
  };
  AInitWarehouse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AInitWarehouse_descriptor_,
      AInitWarehouse::default_instance_,
      AInitWarehouse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AInitWarehouse, _has_bits_[0]),
      -1,
      -1,
      sizeof(AInitWarehouse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AInitWarehouse, _internal_metadata_),
      -1);
  AConnect_descriptor_ = file->message_type(2);
  static const int AConnect_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AConnect, worldid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AConnect, initwh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AConnect, isamazon_),
  };
  AConnect_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AConnect_descriptor_,
      AConnect::default_instance_,
      AConnect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AConnect, _has_bits_[0]),
      -1,
      -1,
      sizeof(AConnect),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AConnect, _internal_metadata_),
      -1);
  AConnected_descriptor_ = file->message_type(3);
  static const int AConnected_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AConnected, worldid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AConnected, result_),
  };
  AConnected_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AConnected_descriptor_,
      AConnected::default_instance_,
      AConnected_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AConnected, _has_bits_[0]),
      -1,
      -1,
      sizeof(AConnected),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AConnected, _internal_metadata_),
      -1);
  APack_descriptor_ = file->message_type(4);
  static const int APack_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APack, whnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APack, things_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APack, shipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APack, seqnum_),
  };
  APack_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      APack_descriptor_,
      APack::default_instance_,
      APack_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APack, _has_bits_[0]),
      -1,
      -1,
      sizeof(APack),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APack, _internal_metadata_),
      -1);
  APacked_descriptor_ = file->message_type(5);
  static const int APacked_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APacked, shipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APacked, seqnum_),
  };
  APacked_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      APacked_descriptor_,
      APacked::default_instance_,
      APacked_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APacked, _has_bits_[0]),
      -1,
      -1,
      sizeof(APacked),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APacked, _internal_metadata_),
      -1);
  ALoaded_descriptor_ = file->message_type(6);
  static const int ALoaded_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ALoaded, shipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ALoaded, seqnum_),
  };
  ALoaded_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ALoaded_descriptor_,
      ALoaded::default_instance_,
      ALoaded_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ALoaded, _has_bits_[0]),
      -1,
      -1,
      sizeof(ALoaded),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ALoaded, _internal_metadata_),
      -1);
  APutOnTruck_descriptor_ = file->message_type(7);
  static const int APutOnTruck_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APutOnTruck, whnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APutOnTruck, truckid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APutOnTruck, shipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APutOnTruck, seqnum_),
  };
  APutOnTruck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      APutOnTruck_descriptor_,
      APutOnTruck::default_instance_,
      APutOnTruck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APutOnTruck, _has_bits_[0]),
      -1,
      -1,
      sizeof(APutOnTruck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APutOnTruck, _internal_metadata_),
      -1);
  APurchaseMore_descriptor_ = file->message_type(8);
  static const int APurchaseMore_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APurchaseMore, whnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APurchaseMore, things_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APurchaseMore, seqnum_),
  };
  APurchaseMore_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      APurchaseMore_descriptor_,
      APurchaseMore::default_instance_,
      APurchaseMore_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APurchaseMore, _has_bits_[0]),
      -1,
      -1,
      sizeof(APurchaseMore),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APurchaseMore, _internal_metadata_),
      -1);
  AErr_descriptor_ = file->message_type(9);
  static const int AErr_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AErr, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AErr, originseqnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AErr, seqnum_),
  };
  AErr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AErr_descriptor_,
      AErr::default_instance_,
      AErr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AErr, _has_bits_[0]),
      -1,
      -1,
      sizeof(AErr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AErr, _internal_metadata_),
      -1);
  AQuery_descriptor_ = file->message_type(10);
  static const int AQuery_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AQuery, packageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AQuery, seqnum_),
  };
  AQuery_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AQuery_descriptor_,
      AQuery::default_instance_,
      AQuery_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AQuery, _has_bits_[0]),
      -1,
      -1,
      sizeof(AQuery),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AQuery, _internal_metadata_),
      -1);
  APackage_descriptor_ = file->message_type(11);
  static const int APackage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APackage, packageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APackage, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APackage, seqnum_),
  };
  APackage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      APackage_descriptor_,
      APackage::default_instance_,
      APackage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APackage, _has_bits_[0]),
      -1,
      -1,
      sizeof(APackage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(APackage, _internal_metadata_),
      -1);
  ACommands_descriptor_ = file->message_type(12);
  static const int ACommands_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACommands, buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACommands, topack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACommands, load_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACommands, queries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACommands, simspeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACommands, disconnect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACommands, acks_),
  };
  ACommands_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ACommands_descriptor_,
      ACommands::default_instance_,
      ACommands_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACommands, _has_bits_[0]),
      -1,
      -1,
      sizeof(ACommands),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ACommands, _internal_metadata_),
      -1);
  AResponses_descriptor_ = file->message_type(13);
  static const int AResponses_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AResponses, arrived_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AResponses, ready_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AResponses, loaded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AResponses, finished_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AResponses, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AResponses, acks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AResponses, packagestatus_),
  };
  AResponses_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AResponses_descriptor_,
      AResponses::default_instance_,
      AResponses_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AResponses, _has_bits_[0]),
      -1,
      -1,
      sizeof(AResponses),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AResponses, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_world_5famazon_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AProduct_descriptor_, &AProduct::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AInitWarehouse_descriptor_, &AInitWarehouse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AConnect_descriptor_, &AConnect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AConnected_descriptor_, &AConnected::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      APack_descriptor_, &APack::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      APacked_descriptor_, &APacked::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ALoaded_descriptor_, &ALoaded::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      APutOnTruck_descriptor_, &APutOnTruck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      APurchaseMore_descriptor_, &APurchaseMore::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AErr_descriptor_, &AErr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AQuery_descriptor_, &AQuery::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      APackage_descriptor_, &APackage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ACommands_descriptor_, &ACommands::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AResponses_descriptor_, &AResponses::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_world_5famazon_2eproto() {
  delete AProduct::default_instance_;
  delete AProduct_reflection_;
  delete AInitWarehouse::default_instance_;
  delete AInitWarehouse_reflection_;
  delete AConnect::default_instance_;
  delete AConnect_reflection_;
  delete AConnected::default_instance_;
  delete AConnected_reflection_;
  delete APack::default_instance_;
  delete APack_reflection_;
  delete APacked::default_instance_;
  delete APacked_reflection_;
  delete ALoaded::default_instance_;
  delete ALoaded_reflection_;
  delete APutOnTruck::default_instance_;
  delete APutOnTruck_reflection_;
  delete APurchaseMore::default_instance_;
  delete APurchaseMore_reflection_;
  delete AErr::default_instance_;
  delete AErr_reflection_;
  delete AQuery::default_instance_;
  delete AQuery_reflection_;
  delete APackage::default_instance_;
  delete APackage_reflection_;
  delete ACommands::default_instance_;
  delete ACommands_reflection_;
  delete AResponses::default_instance_;
  delete AResponses_reflection_;
}

void protobuf_AddDesc_world_5famazon_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_world_5famazon_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022world_amazon.proto\":\n\010AProduct\022\n\n\002id\030\001"
    " \002(\003\022\023\n\013description\030\002 \002(\t\022\r\n\005count\030\003 \002(\005"
    "\"2\n\016AInitWarehouse\022\n\n\002id\030\001 \002(\005\022\t\n\001x\030\002 \002("
    "\005\022\t\n\001y\030\003 \002(\005\"N\n\010AConnect\022\017\n\007worldid\030\001 \001("
    "\003\022\037\n\006initwh\030\002 \003(\0132\017.AInitWarehouse\022\020\n\010is"
    "Amazon\030\003 \002(\010\"-\n\nAConnected\022\017\n\007worldid\030\001 "
    "\002(\003\022\016\n\006result\030\002 \002(\t\"Q\n\005APack\022\r\n\005whnum\030\001 "
    "\002(\005\022\031\n\006things\030\002 \003(\0132\t.AProduct\022\016\n\006shipid"
    "\030\003 \002(\003\022\016\n\006seqnum\030\004 \002(\003\")\n\007APacked\022\016\n\006shi"
    "pid\030\001 \002(\003\022\016\n\006seqnum\030\002 \002(\003\")\n\007ALoaded\022\016\n\006"
    "shipid\030\001 \002(\003\022\016\n\006seqnum\030\002 \002(\003\"M\n\013APutOnTr"
    "uck\022\r\n\005whnum\030\001 \002(\005\022\017\n\007truckid\030\002 \002(\005\022\016\n\006s"
    "hipid\030\003 \002(\003\022\016\n\006seqnum\030\004 \002(\003\"I\n\rAPurchase"
    "More\022\r\n\005whnum\030\001 \002(\005\022\031\n\006things\030\002 \003(\0132\t.AP"
    "roduct\022\016\n\006seqnum\030\003 \002(\003\"9\n\004AErr\022\013\n\003err\030\001 "
    "\002(\t\022\024\n\014originseqnum\030\002 \002(\003\022\016\n\006seqnum\030\003 \002("
    "\003\"+\n\006AQuery\022\021\n\tpackageid\030\001 \002(\003\022\016\n\006seqnum"
    "\030\002 \002(\003\"=\n\010APackage\022\021\n\tpackageid\030\001 \002(\003\022\016\n"
    "\006status\030\002 \002(\t\022\016\n\006seqnum\030\003 \002(\003\"\252\001\n\tAComma"
    "nds\022\033\n\003buy\030\001 \003(\0132\016.APurchaseMore\022\026\n\006topa"
    "ck\030\002 \003(\0132\006.APack\022\032\n\004load\030\003 \003(\0132\014.APutOnT"
    "ruck\022\030\n\007queries\030\004 \003(\0132\007.AQuery\022\020\n\010simspe"
    "ed\030\005 \001(\r\022\022\n\ndisconnect\030\006 \001(\010\022\014\n\004acks\030\007 \003"
    "(\003\"\270\001\n\nAResponses\022\037\n\007arrived\030\001 \003(\0132\016.APu"
    "rchaseMore\022\027\n\005ready\030\002 \003(\0132\010.APacked\022\030\n\006l"
    "oaded\030\003 \003(\0132\010.ALoaded\022\020\n\010finished\030\004 \001(\010\022"
    "\024\n\005error\030\005 \003(\0132\005.AErr\022\014\n\004acks\030\006 \003(\003\022 \n\rp"
    "ackagestatus\030\007 \003(\0132\t.APackage", 1109);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "world_amazon.proto", &protobuf_RegisterTypes);
  AProduct::default_instance_ = new AProduct();
  AInitWarehouse::default_instance_ = new AInitWarehouse();
  AConnect::default_instance_ = new AConnect();
  AConnected::default_instance_ = new AConnected();
  APack::default_instance_ = new APack();
  APacked::default_instance_ = new APacked();
  ALoaded::default_instance_ = new ALoaded();
  APutOnTruck::default_instance_ = new APutOnTruck();
  APurchaseMore::default_instance_ = new APurchaseMore();
  AErr::default_instance_ = new AErr();
  AQuery::default_instance_ = new AQuery();
  APackage::default_instance_ = new APackage();
  ACommands::default_instance_ = new ACommands();
  AResponses::default_instance_ = new AResponses();
  AProduct::default_instance_->InitAsDefaultInstance();
  AInitWarehouse::default_instance_->InitAsDefaultInstance();
  AConnect::default_instance_->InitAsDefaultInstance();
  AConnected::default_instance_->InitAsDefaultInstance();
  APack::default_instance_->InitAsDefaultInstance();
  APacked::default_instance_->InitAsDefaultInstance();
  ALoaded::default_instance_->InitAsDefaultInstance();
  APutOnTruck::default_instance_->InitAsDefaultInstance();
  APurchaseMore::default_instance_->InitAsDefaultInstance();
  AErr::default_instance_->InitAsDefaultInstance();
  AQuery::default_instance_->InitAsDefaultInstance();
  APackage::default_instance_->InitAsDefaultInstance();
  ACommands::default_instance_->InitAsDefaultInstance();
  AResponses::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_world_5famazon_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_world_5famazon_2eproto {
  StaticDescriptorInitializer_world_5famazon_2eproto() {
    protobuf_AddDesc_world_5famazon_2eproto();
  }
} static_descriptor_initializer_world_5famazon_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AProduct::kIdFieldNumber;
const int AProduct::kDescriptionFieldNumber;
const int AProduct::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AProduct::AProduct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AProduct)
}

void AProduct::InitAsDefaultInstance() {
}

AProduct::AProduct(const AProduct& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AProduct)
}

void AProduct::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AProduct::~AProduct() {
  // @@protoc_insertion_point(destructor:AProduct)
  SharedDtor();
}

void AProduct::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AProduct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AProduct::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AProduct_descriptor_;
}

const AProduct& AProduct::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_world_5famazon_2eproto();
  return *default_instance_;
}

AProduct* AProduct::default_instance_ = NULL;

AProduct* AProduct::New(::google::protobuf::Arena* arena) const {
  AProduct* n = new AProduct;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AProduct::Clear() {
// @@protoc_insertion_point(message_clear_start:AProduct)
  if (_has_bits_[0 / 32] & 7u) {
    id_ = GOOGLE_LONGLONG(0);
    if (has_description()) {
      description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AProduct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AProduct)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_description;
        break;
      }

      // required string description = 2;
      case 2: {
        if (tag == 18) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AProduct.description");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_count;
        break;
      }

      // required int32 count = 3;
      case 3: {
        if (tag == 24) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AProduct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AProduct)
  return false;
#undef DO_
}

void AProduct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AProduct)
  // required int64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // required string description = 2;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AProduct.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // required int32 count = 3;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AProduct)
}

::google::protobuf::uint8* AProduct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AProduct)
  // required int64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // required string description = 2;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AProduct.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // required int32 count = 3;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AProduct)
  return target;
}

int AProduct::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AProduct)
  int total_size = 0;

  if (has_id()) {
    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  if (has_description()) {
    // required string description = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  if (has_count()) {
    // required int32 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  return total_size;
}
int AProduct::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AProduct)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());

    // required string description = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());

    // required int32 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AProduct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AProduct)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AProduct* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AProduct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AProduct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AProduct)
    MergeFrom(*source);
  }
}

void AProduct::MergeFrom(const AProduct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AProduct)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_description()) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AProduct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AProduct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AProduct::CopyFrom(const AProduct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AProduct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AProduct::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void AProduct::Swap(AProduct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AProduct::InternalSwap(AProduct* other) {
  std::swap(id_, other->id_);
  description_.Swap(&other->description_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AProduct::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AProduct_descriptor_;
  metadata.reflection = AProduct_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AProduct

// required int64 id = 1;
bool AProduct::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AProduct::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void AProduct::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void AProduct::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::int64 AProduct::id() const {
  // @@protoc_insertion_point(field_get:AProduct.id)
  return id_;
}
 void AProduct::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:AProduct.id)
}

// required string description = 2;
bool AProduct::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AProduct::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
void AProduct::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
void AProduct::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
 const ::std::string& AProduct::description() const {
  // @@protoc_insertion_point(field_get:AProduct.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AProduct::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AProduct.description)
}
 void AProduct::set_description(const char* value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AProduct.description)
}
 void AProduct::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AProduct.description)
}
 ::std::string* AProduct::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:AProduct.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AProduct::release_description() {
  // @@protoc_insertion_point(field_release:AProduct.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AProduct::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:AProduct.description)
}

// required int32 count = 3;
bool AProduct::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AProduct::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
void AProduct::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
void AProduct::clear_count() {
  count_ = 0;
  clear_has_count();
}
 ::google::protobuf::int32 AProduct::count() const {
  // @@protoc_insertion_point(field_get:AProduct.count)
  return count_;
}
 void AProduct::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:AProduct.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AInitWarehouse::kIdFieldNumber;
const int AInitWarehouse::kXFieldNumber;
const int AInitWarehouse::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AInitWarehouse::AInitWarehouse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AInitWarehouse)
}

void AInitWarehouse::InitAsDefaultInstance() {
}

AInitWarehouse::AInitWarehouse(const AInitWarehouse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AInitWarehouse)
}

void AInitWarehouse::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  x_ = 0;
  y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AInitWarehouse::~AInitWarehouse() {
  // @@protoc_insertion_point(destructor:AInitWarehouse)
  SharedDtor();
}

void AInitWarehouse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AInitWarehouse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AInitWarehouse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AInitWarehouse_descriptor_;
}

const AInitWarehouse& AInitWarehouse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_world_5famazon_2eproto();
  return *default_instance_;
}

AInitWarehouse* AInitWarehouse::default_instance_ = NULL;

AInitWarehouse* AInitWarehouse::New(::google::protobuf::Arena* arena) const {
  AInitWarehouse* n = new AInitWarehouse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AInitWarehouse::Clear() {
// @@protoc_insertion_point(message_clear_start:AInitWarehouse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AInitWarehouse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AInitWarehouse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, y_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AInitWarehouse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AInitWarehouse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_x;
        break;
      }

      // required int32 x = 2;
      case 2: {
        if (tag == 16) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_y;
        break;
      }

      // required int32 y = 3;
      case 3: {
        if (tag == 24) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AInitWarehouse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AInitWarehouse)
  return false;
#undef DO_
}

void AInitWarehouse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AInitWarehouse)
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required int32 x = 2;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // required int32 y = 3;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AInitWarehouse)
}

::google::protobuf::uint8* AInitWarehouse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AInitWarehouse)
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required int32 x = 2;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // required int32 y = 3;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AInitWarehouse)
  return target;
}

int AInitWarehouse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AInitWarehouse)
  int total_size = 0;

  if (has_id()) {
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  if (has_x()) {
    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  if (has_y()) {
    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  return total_size;
}
int AInitWarehouse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AInitWarehouse)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());

    // required int32 x = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());

    // required int32 y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AInitWarehouse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AInitWarehouse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AInitWarehouse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AInitWarehouse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AInitWarehouse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AInitWarehouse)
    MergeFrom(*source);
  }
}

void AInitWarehouse::MergeFrom(const AInitWarehouse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AInitWarehouse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AInitWarehouse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AInitWarehouse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AInitWarehouse::CopyFrom(const AInitWarehouse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AInitWarehouse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AInitWarehouse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void AInitWarehouse::Swap(AInitWarehouse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AInitWarehouse::InternalSwap(AInitWarehouse* other) {
  std::swap(id_, other->id_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AInitWarehouse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AInitWarehouse_descriptor_;
  metadata.reflection = AInitWarehouse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AInitWarehouse

// required int32 id = 1;
bool AInitWarehouse::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AInitWarehouse::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void AInitWarehouse::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void AInitWarehouse::clear_id() {
  id_ = 0;
  clear_has_id();
}
 ::google::protobuf::int32 AInitWarehouse::id() const {
  // @@protoc_insertion_point(field_get:AInitWarehouse.id)
  return id_;
}
 void AInitWarehouse::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:AInitWarehouse.id)
}

// required int32 x = 2;
bool AInitWarehouse::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AInitWarehouse::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
void AInitWarehouse::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
void AInitWarehouse::clear_x() {
  x_ = 0;
  clear_has_x();
}
 ::google::protobuf::int32 AInitWarehouse::x() const {
  // @@protoc_insertion_point(field_get:AInitWarehouse.x)
  return x_;
}
 void AInitWarehouse::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:AInitWarehouse.x)
}

// required int32 y = 3;
bool AInitWarehouse::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AInitWarehouse::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
void AInitWarehouse::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
void AInitWarehouse::clear_y() {
  y_ = 0;
  clear_has_y();
}
 ::google::protobuf::int32 AInitWarehouse::y() const {
  // @@protoc_insertion_point(field_get:AInitWarehouse.y)
  return y_;
}
 void AInitWarehouse::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:AInitWarehouse.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AConnect::kWorldidFieldNumber;
const int AConnect::kInitwhFieldNumber;
const int AConnect::kIsAmazonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AConnect::AConnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AConnect)
}

void AConnect::InitAsDefaultInstance() {
}

AConnect::AConnect(const AConnect& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AConnect)
}

void AConnect::SharedCtor() {
  _cached_size_ = 0;
  worldid_ = GOOGLE_LONGLONG(0);
  isamazon_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AConnect::~AConnect() {
  // @@protoc_insertion_point(destructor:AConnect)
  SharedDtor();
}

void AConnect::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AConnect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AConnect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AConnect_descriptor_;
}

const AConnect& AConnect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_world_5famazon_2eproto();
  return *default_instance_;
}

AConnect* AConnect::default_instance_ = NULL;

AConnect* AConnect::New(::google::protobuf::Arena* arena) const {
  AConnect* n = new AConnect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:AConnect)
  if (_has_bits_[0 / 32] & 5u) {
    worldid_ = GOOGLE_LONGLONG(0);
    isamazon_ = false;
  }
  initwh_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AConnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AConnect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 worldid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worldid_)));
          set_has_worldid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_initwh;
        break;
      }

      // repeated .AInitWarehouse initwh = 2;
      case 2: {
        if (tag == 18) {
         parse_initwh:
          DO_(input->IncrementRecursionDepth());
         parse_loop_initwh:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_initwh()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_initwh;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_isAmazon;
        break;
      }

      // required bool isAmazon = 3;
      case 3: {
        if (tag == 24) {
         parse_isAmazon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isamazon_)));
          set_has_isamazon();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AConnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AConnect)
  return false;
#undef DO_
}

void AConnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AConnect)
  // optional int64 worldid = 1;
  if (has_worldid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->worldid(), output);
  }

  // repeated .AInitWarehouse initwh = 2;
  for (unsigned int i = 0, n = this->initwh_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->initwh(i), output);
  }

  // required bool isAmazon = 3;
  if (has_isamazon()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->isamazon(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AConnect)
}

::google::protobuf::uint8* AConnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AConnect)
  // optional int64 worldid = 1;
  if (has_worldid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->worldid(), target);
  }

  // repeated .AInitWarehouse initwh = 2;
  for (unsigned int i = 0, n = this->initwh_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->initwh(i), false, target);
  }

  // required bool isAmazon = 3;
  if (has_isamazon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->isamazon(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AConnect)
  return target;
}

int AConnect::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AConnect)
  int total_size = 0;

  // required bool isAmazon = 3;
  if (has_isamazon()) {
    total_size += 1 + 1;
  }
  // optional int64 worldid = 1;
  if (has_worldid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());
  }

  // repeated .AInitWarehouse initwh = 2;
  total_size += 1 * this->initwh_size();
  for (int i = 0; i < this->initwh_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->initwh(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AConnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AConnect)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AConnect* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AConnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AConnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AConnect)
    MergeFrom(*source);
  }
}

void AConnect::MergeFrom(const AConnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AConnect)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  initwh_.MergeFrom(from.initwh_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_worldid()) {
      set_worldid(from.worldid());
    }
    if (from.has_isamazon()) {
      set_isamazon(from.isamazon());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AConnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AConnect::CopyFrom(const AConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AConnect::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->initwh())) return false;
  return true;
}

void AConnect::Swap(AConnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AConnect::InternalSwap(AConnect* other) {
  std::swap(worldid_, other->worldid_);
  initwh_.UnsafeArenaSwap(&other->initwh_);
  std::swap(isamazon_, other->isamazon_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AConnect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AConnect_descriptor_;
  metadata.reflection = AConnect_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AConnect

// optional int64 worldid = 1;
bool AConnect::has_worldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AConnect::set_has_worldid() {
  _has_bits_[0] |= 0x00000001u;
}
void AConnect::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AConnect::clear_worldid() {
  worldid_ = GOOGLE_LONGLONG(0);
  clear_has_worldid();
}
 ::google::protobuf::int64 AConnect::worldid() const {
  // @@protoc_insertion_point(field_get:AConnect.worldid)
  return worldid_;
}
 void AConnect::set_worldid(::google::protobuf::int64 value) {
  set_has_worldid();
  worldid_ = value;
  // @@protoc_insertion_point(field_set:AConnect.worldid)
}

// repeated .AInitWarehouse initwh = 2;
int AConnect::initwh_size() const {
  return initwh_.size();
}
void AConnect::clear_initwh() {
  initwh_.Clear();
}
const ::AInitWarehouse& AConnect::initwh(int index) const {
  // @@protoc_insertion_point(field_get:AConnect.initwh)
  return initwh_.Get(index);
}
::AInitWarehouse* AConnect::mutable_initwh(int index) {
  // @@protoc_insertion_point(field_mutable:AConnect.initwh)
  return initwh_.Mutable(index);
}
::AInitWarehouse* AConnect::add_initwh() {
  // @@protoc_insertion_point(field_add:AConnect.initwh)
  return initwh_.Add();
}
::google::protobuf::RepeatedPtrField< ::AInitWarehouse >*
AConnect::mutable_initwh() {
  // @@protoc_insertion_point(field_mutable_list:AConnect.initwh)
  return &initwh_;
}
const ::google::protobuf::RepeatedPtrField< ::AInitWarehouse >&
AConnect::initwh() const {
  // @@protoc_insertion_point(field_list:AConnect.initwh)
  return initwh_;
}

// required bool isAmazon = 3;
bool AConnect::has_isamazon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AConnect::set_has_isamazon() {
  _has_bits_[0] |= 0x00000004u;
}
void AConnect::clear_has_isamazon() {
  _has_bits_[0] &= ~0x00000004u;
}
void AConnect::clear_isamazon() {
  isamazon_ = false;
  clear_has_isamazon();
}
 bool AConnect::isamazon() const {
  // @@protoc_insertion_point(field_get:AConnect.isAmazon)
  return isamazon_;
}
 void AConnect::set_isamazon(bool value) {
  set_has_isamazon();
  isamazon_ = value;
  // @@protoc_insertion_point(field_set:AConnect.isAmazon)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AConnected::kWorldidFieldNumber;
const int AConnected::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AConnected::AConnected()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AConnected)
}

void AConnected::InitAsDefaultInstance() {
}

AConnected::AConnected(const AConnected& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AConnected)
}

void AConnected::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  worldid_ = GOOGLE_LONGLONG(0);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AConnected::~AConnected() {
  // @@protoc_insertion_point(destructor:AConnected)
  SharedDtor();
}

void AConnected::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AConnected::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AConnected::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AConnected_descriptor_;
}

const AConnected& AConnected::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_world_5famazon_2eproto();
  return *default_instance_;
}

AConnected* AConnected::default_instance_ = NULL;

AConnected* AConnected::New(::google::protobuf::Arena* arena) const {
  AConnected* n = new AConnected;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AConnected::Clear() {
// @@protoc_insertion_point(message_clear_start:AConnected)
  if (_has_bits_[0 / 32] & 3u) {
    worldid_ = GOOGLE_LONGLONG(0);
    if (has_result()) {
      result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AConnected::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AConnected)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 worldid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worldid_)));
          set_has_worldid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_result;
        break;
      }

      // required string result = 2;
      case 2: {
        if (tag == 18) {
         parse_result:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->result().data(), this->result().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AConnected.result");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AConnected)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AConnected)
  return false;
#undef DO_
}

void AConnected::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AConnected)
  // required int64 worldid = 1;
  if (has_worldid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->worldid(), output);
  }

  // required string result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AConnected.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AConnected)
}

::google::protobuf::uint8* AConnected::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AConnected)
  // required int64 worldid = 1;
  if (has_worldid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->worldid(), target);
  }

  // required string result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), this->result().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AConnected.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AConnected)
  return target;
}

int AConnected::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AConnected)
  int total_size = 0;

  if (has_worldid()) {
    // required int64 worldid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());
  }

  if (has_result()) {
    // required string result = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());
  }

  return total_size;
}
int AConnected::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AConnected)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 worldid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->worldid());

    // required string result = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AConnected::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AConnected)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AConnected* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AConnected>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AConnected)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AConnected)
    MergeFrom(*source);
  }
}

void AConnected::MergeFrom(const AConnected& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AConnected)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_worldid()) {
      set_worldid(from.worldid());
    }
    if (from.has_result()) {
      set_has_result();
      result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AConnected::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AConnected::CopyFrom(const AConnected& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AConnected)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AConnected::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AConnected::Swap(AConnected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AConnected::InternalSwap(AConnected* other) {
  std::swap(worldid_, other->worldid_);
  result_.Swap(&other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AConnected::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AConnected_descriptor_;
  metadata.reflection = AConnected_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AConnected

// required int64 worldid = 1;
bool AConnected::has_worldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AConnected::set_has_worldid() {
  _has_bits_[0] |= 0x00000001u;
}
void AConnected::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AConnected::clear_worldid() {
  worldid_ = GOOGLE_LONGLONG(0);
  clear_has_worldid();
}
 ::google::protobuf::int64 AConnected::worldid() const {
  // @@protoc_insertion_point(field_get:AConnected.worldid)
  return worldid_;
}
 void AConnected::set_worldid(::google::protobuf::int64 value) {
  set_has_worldid();
  worldid_ = value;
  // @@protoc_insertion_point(field_set:AConnected.worldid)
}

// required string result = 2;
bool AConnected::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AConnected::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void AConnected::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void AConnected::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_result();
}
 const ::std::string& AConnected::result() const {
  // @@protoc_insertion_point(field_get:AConnected.result)
  return result_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AConnected::set_result(const ::std::string& value) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AConnected.result)
}
 void AConnected::set_result(const char* value) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AConnected.result)
}
 void AConnected::set_result(const char* value, size_t size) {
  set_has_result();
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AConnected.result)
}
 ::std::string* AConnected::mutable_result() {
  set_has_result();
  // @@protoc_insertion_point(field_mutable:AConnected.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AConnected::release_result() {
  // @@protoc_insertion_point(field_release:AConnected.result)
  clear_has_result();
  return result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AConnected::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    set_has_result();
  } else {
    clear_has_result();
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:AConnected.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APack::kWhnumFieldNumber;
const int APack::kThingsFieldNumber;
const int APack::kShipidFieldNumber;
const int APack::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APack::APack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:APack)
}

void APack::InitAsDefaultInstance() {
}

APack::APack(const APack& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:APack)
}

void APack::SharedCtor() {
  _cached_size_ = 0;
  whnum_ = 0;
  shipid_ = GOOGLE_LONGLONG(0);
  seqnum_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

APack::~APack() {
  // @@protoc_insertion_point(destructor:APack)
  SharedDtor();
}

void APack::SharedDtor() {
  if (this != default_instance_) {
  }
}

void APack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APack::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APack_descriptor_;
}

const APack& APack::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_world_5famazon_2eproto();
  return *default_instance_;
}

APack* APack::default_instance_ = NULL;

APack* APack::New(::google::protobuf::Arena* arena) const {
  APack* n = new APack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APack::Clear() {
// @@protoc_insertion_point(message_clear_start:APack)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(APack, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<APack*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(shipid_, whnum_);

#undef ZR_HELPER_
#undef ZR_

  things_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool APack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whnum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whnum_)));
          set_has_whnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_things;
        break;
      }

      // repeated .AProduct things = 2;
      case 2: {
        if (tag == 18) {
         parse_things:
          DO_(input->IncrementRecursionDepth());
         parse_loop_things:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_things()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_things;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_shipid;
        break;
      }

      // required int64 shipid = 3;
      case 3: {
        if (tag == 24) {
         parse_shipid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
          set_has_shipid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_seqnum;
        break;
      }

      // required int64 seqnum = 4;
      case 4: {
        if (tag == 32) {
         parse_seqnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
          set_has_seqnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APack)
  return false;
#undef DO_
}

void APack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APack)
  // required int32 whnum = 1;
  if (has_whnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whnum(), output);
  }

  // repeated .AProduct things = 2;
  for (unsigned int i = 0, n = this->things_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->things(i), output);
  }

  // required int64 shipid = 3;
  if (has_shipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->shipid(), output);
  }

  // required int64 seqnum = 4;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APack)
}

::google::protobuf::uint8* APack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APack)
  // required int32 whnum = 1;
  if (has_whnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whnum(), target);
  }

  // repeated .AProduct things = 2;
  for (unsigned int i = 0, n = this->things_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->things(i), false, target);
  }

  // required int64 shipid = 3;
  if (has_shipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->shipid(), target);
  }

  // required int64 seqnum = 4;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APack)
  return target;
}

int APack::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APack)
  int total_size = 0;

  if (has_whnum()) {
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());
  }

  if (has_shipid()) {
    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
int APack::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:APack)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000d) ^ 0x0000000d) == 0) {  // All required fields are present.
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());

    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .AProduct things = 2;
  total_size += 1 * this->things_size();
  for (int i = 0; i < this->things_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->things(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const APack* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const APack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APack)
    MergeFrom(*source);
  }
}

void APack::MergeFrom(const APack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APack)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  things_.MergeFrom(from.things_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_whnum()) {
      set_whnum(from.whnum());
    }
    if (from.has_shipid()) {
      set_shipid(from.shipid());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void APack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APack::CopyFrom(const APack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APack::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000d) != 0x0000000d) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->things())) return false;
  return true;
}

void APack::Swap(APack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APack::InternalSwap(APack* other) {
  std::swap(whnum_, other->whnum_);
  things_.UnsafeArenaSwap(&other->things_);
  std::swap(shipid_, other->shipid_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APack::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = APack_descriptor_;
  metadata.reflection = APack_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APack

// required int32 whnum = 1;
bool APack::has_whnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void APack::set_has_whnum() {
  _has_bits_[0] |= 0x00000001u;
}
void APack::clear_has_whnum() {
  _has_bits_[0] &= ~0x00000001u;
}
void APack::clear_whnum() {
  whnum_ = 0;
  clear_has_whnum();
}
 ::google::protobuf::int32 APack::whnum() const {
  // @@protoc_insertion_point(field_get:APack.whnum)
  return whnum_;
}
 void APack::set_whnum(::google::protobuf::int32 value) {
  set_has_whnum();
  whnum_ = value;
  // @@protoc_insertion_point(field_set:APack.whnum)
}

// repeated .AProduct things = 2;
int APack::things_size() const {
  return things_.size();
}
void APack::clear_things() {
  things_.Clear();
}
const ::AProduct& APack::things(int index) const {
  // @@protoc_insertion_point(field_get:APack.things)
  return things_.Get(index);
}
::AProduct* APack::mutable_things(int index) {
  // @@protoc_insertion_point(field_mutable:APack.things)
  return things_.Mutable(index);
}
::AProduct* APack::add_things() {
  // @@protoc_insertion_point(field_add:APack.things)
  return things_.Add();
}
::google::protobuf::RepeatedPtrField< ::AProduct >*
APack::mutable_things() {
  // @@protoc_insertion_point(field_mutable_list:APack.things)
  return &things_;
}
const ::google::protobuf::RepeatedPtrField< ::AProduct >&
APack::things() const {
  // @@protoc_insertion_point(field_list:APack.things)
  return things_;
}

// required int64 shipid = 3;
bool APack::has_shipid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void APack::set_has_shipid() {
  _has_bits_[0] |= 0x00000004u;
}
void APack::clear_has_shipid() {
  _has_bits_[0] &= ~0x00000004u;
}
void APack::clear_shipid() {
  shipid_ = GOOGLE_LONGLONG(0);
  clear_has_shipid();
}
 ::google::protobuf::int64 APack::shipid() const {
  // @@protoc_insertion_point(field_get:APack.shipid)
  return shipid_;
}
 void APack::set_shipid(::google::protobuf::int64 value) {
  set_has_shipid();
  shipid_ = value;
  // @@protoc_insertion_point(field_set:APack.shipid)
}

// required int64 seqnum = 4;
bool APack::has_seqnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void APack::set_has_seqnum() {
  _has_bits_[0] |= 0x00000008u;
}
void APack::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000008u;
}
void APack::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
 ::google::protobuf::int64 APack::seqnum() const {
  // @@protoc_insertion_point(field_get:APack.seqnum)
  return seqnum_;
}
 void APack::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:APack.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APacked::kShipidFieldNumber;
const int APacked::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APacked::APacked()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:APacked)
}

void APacked::InitAsDefaultInstance() {
}

APacked::APacked(const APacked& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:APacked)
}

void APacked::SharedCtor() {
  _cached_size_ = 0;
  shipid_ = GOOGLE_LONGLONG(0);
  seqnum_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

APacked::~APacked() {
  // @@protoc_insertion_point(destructor:APacked)
  SharedDtor();
}

void APacked::SharedDtor() {
  if (this != default_instance_) {
  }
}

void APacked::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APacked::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APacked_descriptor_;
}

const APacked& APacked::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_world_5famazon_2eproto();
  return *default_instance_;
}

APacked* APacked::default_instance_ = NULL;

APacked* APacked::New(::google::protobuf::Arena* arena) const {
  APacked* n = new APacked;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APacked::Clear() {
// @@protoc_insertion_point(message_clear_start:APacked)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(APacked, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<APacked*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(shipid_, seqnum_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool APacked::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APacked)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 shipid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
          set_has_shipid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_seqnum;
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (tag == 16) {
         parse_seqnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
          set_has_seqnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APacked)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APacked)
  return false;
#undef DO_
}

void APacked::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APacked)
  // required int64 shipid = 1;
  if (has_shipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shipid(), output);
  }

  // required int64 seqnum = 2;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APacked)
}

::google::protobuf::uint8* APacked::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APacked)
  // required int64 shipid = 1;
  if (has_shipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shipid(), target);
  }

  // required int64 seqnum = 2;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APacked)
  return target;
}

int APacked::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APacked)
  int total_size = 0;

  if (has_shipid()) {
    // required int64 shipid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
int APacked::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:APacked)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 shipid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APacked::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APacked)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const APacked* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const APacked>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APacked)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APacked)
    MergeFrom(*source);
  }
}

void APacked::MergeFrom(const APacked& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APacked)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shipid()) {
      set_shipid(from.shipid());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void APacked::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APacked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APacked::CopyFrom(const APacked& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APacked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APacked::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void APacked::Swap(APacked* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APacked::InternalSwap(APacked* other) {
  std::swap(shipid_, other->shipid_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APacked::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = APacked_descriptor_;
  metadata.reflection = APacked_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APacked

// required int64 shipid = 1;
bool APacked::has_shipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void APacked::set_has_shipid() {
  _has_bits_[0] |= 0x00000001u;
}
void APacked::clear_has_shipid() {
  _has_bits_[0] &= ~0x00000001u;
}
void APacked::clear_shipid() {
  shipid_ = GOOGLE_LONGLONG(0);
  clear_has_shipid();
}
 ::google::protobuf::int64 APacked::shipid() const {
  // @@protoc_insertion_point(field_get:APacked.shipid)
  return shipid_;
}
 void APacked::set_shipid(::google::protobuf::int64 value) {
  set_has_shipid();
  shipid_ = value;
  // @@protoc_insertion_point(field_set:APacked.shipid)
}

// required int64 seqnum = 2;
bool APacked::has_seqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void APacked::set_has_seqnum() {
  _has_bits_[0] |= 0x00000002u;
}
void APacked::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
void APacked::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
 ::google::protobuf::int64 APacked::seqnum() const {
  // @@protoc_insertion_point(field_get:APacked.seqnum)
  return seqnum_;
}
 void APacked::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:APacked.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ALoaded::kShipidFieldNumber;
const int ALoaded::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ALoaded::ALoaded()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ALoaded)
}

void ALoaded::InitAsDefaultInstance() {
}

ALoaded::ALoaded(const ALoaded& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ALoaded)
}

void ALoaded::SharedCtor() {
  _cached_size_ = 0;
  shipid_ = GOOGLE_LONGLONG(0);
  seqnum_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ALoaded::~ALoaded() {
  // @@protoc_insertion_point(destructor:ALoaded)
  SharedDtor();
}

void ALoaded::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ALoaded::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ALoaded::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ALoaded_descriptor_;
}

const ALoaded& ALoaded::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_world_5famazon_2eproto();
  return *default_instance_;
}

ALoaded* ALoaded::default_instance_ = NULL;

ALoaded* ALoaded::New(::google::protobuf::Arena* arena) const {
  ALoaded* n = new ALoaded;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ALoaded::Clear() {
// @@protoc_insertion_point(message_clear_start:ALoaded)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ALoaded, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ALoaded*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(shipid_, seqnum_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ALoaded::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ALoaded)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 shipid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
          set_has_shipid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_seqnum;
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (tag == 16) {
         parse_seqnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
          set_has_seqnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ALoaded)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ALoaded)
  return false;
#undef DO_
}

void ALoaded::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ALoaded)
  // required int64 shipid = 1;
  if (has_shipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shipid(), output);
  }

  // required int64 seqnum = 2;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ALoaded)
}

::google::protobuf::uint8* ALoaded::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ALoaded)
  // required int64 shipid = 1;
  if (has_shipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shipid(), target);
  }

  // required int64 seqnum = 2;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ALoaded)
  return target;
}

int ALoaded::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ALoaded)
  int total_size = 0;

  if (has_shipid()) {
    // required int64 shipid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
int ALoaded::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ALoaded)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 shipid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ALoaded::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ALoaded)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ALoaded* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ALoaded>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ALoaded)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ALoaded)
    MergeFrom(*source);
  }
}

void ALoaded::MergeFrom(const ALoaded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ALoaded)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shipid()) {
      set_shipid(from.shipid());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ALoaded::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ALoaded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ALoaded::CopyFrom(const ALoaded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ALoaded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ALoaded::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ALoaded::Swap(ALoaded* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ALoaded::InternalSwap(ALoaded* other) {
  std::swap(shipid_, other->shipid_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ALoaded::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ALoaded_descriptor_;
  metadata.reflection = ALoaded_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ALoaded

// required int64 shipid = 1;
bool ALoaded::has_shipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ALoaded::set_has_shipid() {
  _has_bits_[0] |= 0x00000001u;
}
void ALoaded::clear_has_shipid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ALoaded::clear_shipid() {
  shipid_ = GOOGLE_LONGLONG(0);
  clear_has_shipid();
}
 ::google::protobuf::int64 ALoaded::shipid() const {
  // @@protoc_insertion_point(field_get:ALoaded.shipid)
  return shipid_;
}
 void ALoaded::set_shipid(::google::protobuf::int64 value) {
  set_has_shipid();
  shipid_ = value;
  // @@protoc_insertion_point(field_set:ALoaded.shipid)
}

// required int64 seqnum = 2;
bool ALoaded::has_seqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ALoaded::set_has_seqnum() {
  _has_bits_[0] |= 0x00000002u;
}
void ALoaded::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
void ALoaded::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
 ::google::protobuf::int64 ALoaded::seqnum() const {
  // @@protoc_insertion_point(field_get:ALoaded.seqnum)
  return seqnum_;
}
 void ALoaded::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:ALoaded.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APutOnTruck::kWhnumFieldNumber;
const int APutOnTruck::kTruckidFieldNumber;
const int APutOnTruck::kShipidFieldNumber;
const int APutOnTruck::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APutOnTruck::APutOnTruck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:APutOnTruck)
}

void APutOnTruck::InitAsDefaultInstance() {
}

APutOnTruck::APutOnTruck(const APutOnTruck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:APutOnTruck)
}

void APutOnTruck::SharedCtor() {
  _cached_size_ = 0;
  whnum_ = 0;
  truckid_ = 0;
  shipid_ = GOOGLE_LONGLONG(0);
  seqnum_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

APutOnTruck::~APutOnTruck() {
  // @@protoc_insertion_point(destructor:APutOnTruck)
  SharedDtor();
}

void APutOnTruck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void APutOnTruck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APutOnTruck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APutOnTruck_descriptor_;
}

const APutOnTruck& APutOnTruck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_world_5famazon_2eproto();
  return *default_instance_;
}

APutOnTruck* APutOnTruck::default_instance_ = NULL;

APutOnTruck* APutOnTruck::New(::google::protobuf::Arena* arena) const {
  APutOnTruck* n = new APutOnTruck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APutOnTruck::Clear() {
// @@protoc_insertion_point(message_clear_start:APutOnTruck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(APutOnTruck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<APutOnTruck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(whnum_, seqnum_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool APutOnTruck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APutOnTruck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whnum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whnum_)));
          set_has_whnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_truckid;
        break;
      }

      // required int32 truckid = 2;
      case 2: {
        if (tag == 16) {
         parse_truckid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
          set_has_truckid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_shipid;
        break;
      }

      // required int64 shipid = 3;
      case 3: {
        if (tag == 24) {
         parse_shipid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
          set_has_shipid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_seqnum;
        break;
      }

      // required int64 seqnum = 4;
      case 4: {
        if (tag == 32) {
         parse_seqnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
          set_has_seqnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APutOnTruck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APutOnTruck)
  return false;
#undef DO_
}

void APutOnTruck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APutOnTruck)
  // required int32 whnum = 1;
  if (has_whnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whnum(), output);
  }

  // required int32 truckid = 2;
  if (has_truckid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->truckid(), output);
  }

  // required int64 shipid = 3;
  if (has_shipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->shipid(), output);
  }

  // required int64 seqnum = 4;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APutOnTruck)
}

::google::protobuf::uint8* APutOnTruck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APutOnTruck)
  // required int32 whnum = 1;
  if (has_whnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whnum(), target);
  }

  // required int32 truckid = 2;
  if (has_truckid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->truckid(), target);
  }

  // required int64 shipid = 3;
  if (has_shipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->shipid(), target);
  }

  // required int64 seqnum = 4;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APutOnTruck)
  return target;
}

int APutOnTruck::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APutOnTruck)
  int total_size = 0;

  if (has_whnum()) {
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());
  }

  if (has_truckid()) {
    // required int32 truckid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  if (has_shipid()) {
    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
int APutOnTruck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:APutOnTruck)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());

    // required int32 truckid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

    // required int64 shipid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APutOnTruck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APutOnTruck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const APutOnTruck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const APutOnTruck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APutOnTruck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APutOnTruck)
    MergeFrom(*source);
  }
}

void APutOnTruck::MergeFrom(const APutOnTruck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APutOnTruck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_whnum()) {
      set_whnum(from.whnum());
    }
    if (from.has_truckid()) {
      set_truckid(from.truckid());
    }
    if (from.has_shipid()) {
      set_shipid(from.shipid());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void APutOnTruck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APutOnTruck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APutOnTruck::CopyFrom(const APutOnTruck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APutOnTruck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APutOnTruck::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void APutOnTruck::Swap(APutOnTruck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APutOnTruck::InternalSwap(APutOnTruck* other) {
  std::swap(whnum_, other->whnum_);
  std::swap(truckid_, other->truckid_);
  std::swap(shipid_, other->shipid_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APutOnTruck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = APutOnTruck_descriptor_;
  metadata.reflection = APutOnTruck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APutOnTruck

// required int32 whnum = 1;
bool APutOnTruck::has_whnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void APutOnTruck::set_has_whnum() {
  _has_bits_[0] |= 0x00000001u;
}
void APutOnTruck::clear_has_whnum() {
  _has_bits_[0] &= ~0x00000001u;
}
void APutOnTruck::clear_whnum() {
  whnum_ = 0;
  clear_has_whnum();
}
 ::google::protobuf::int32 APutOnTruck::whnum() const {
  // @@protoc_insertion_point(field_get:APutOnTruck.whnum)
  return whnum_;
}
 void APutOnTruck::set_whnum(::google::protobuf::int32 value) {
  set_has_whnum();
  whnum_ = value;
  // @@protoc_insertion_point(field_set:APutOnTruck.whnum)
}

// required int32 truckid = 2;
bool APutOnTruck::has_truckid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void APutOnTruck::set_has_truckid() {
  _has_bits_[0] |= 0x00000002u;
}
void APutOnTruck::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000002u;
}
void APutOnTruck::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
 ::google::protobuf::int32 APutOnTruck::truckid() const {
  // @@protoc_insertion_point(field_get:APutOnTruck.truckid)
  return truckid_;
}
 void APutOnTruck::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:APutOnTruck.truckid)
}

// required int64 shipid = 3;
bool APutOnTruck::has_shipid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void APutOnTruck::set_has_shipid() {
  _has_bits_[0] |= 0x00000004u;
}
void APutOnTruck::clear_has_shipid() {
  _has_bits_[0] &= ~0x00000004u;
}
void APutOnTruck::clear_shipid() {
  shipid_ = GOOGLE_LONGLONG(0);
  clear_has_shipid();
}
 ::google::protobuf::int64 APutOnTruck::shipid() const {
  // @@protoc_insertion_point(field_get:APutOnTruck.shipid)
  return shipid_;
}
 void APutOnTruck::set_shipid(::google::protobuf::int64 value) {
  set_has_shipid();
  shipid_ = value;
  // @@protoc_insertion_point(field_set:APutOnTruck.shipid)
}

// required int64 seqnum = 4;
bool APutOnTruck::has_seqnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void APutOnTruck::set_has_seqnum() {
  _has_bits_[0] |= 0x00000008u;
}
void APutOnTruck::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000008u;
}
void APutOnTruck::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
 ::google::protobuf::int64 APutOnTruck::seqnum() const {
  // @@protoc_insertion_point(field_get:APutOnTruck.seqnum)
  return seqnum_;
}
 void APutOnTruck::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:APutOnTruck.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APurchaseMore::kWhnumFieldNumber;
const int APurchaseMore::kThingsFieldNumber;
const int APurchaseMore::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APurchaseMore::APurchaseMore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:APurchaseMore)
}

void APurchaseMore::InitAsDefaultInstance() {
}

APurchaseMore::APurchaseMore(const APurchaseMore& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:APurchaseMore)
}

void APurchaseMore::SharedCtor() {
  _cached_size_ = 0;
  whnum_ = 0;
  seqnum_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

APurchaseMore::~APurchaseMore() {
  // @@protoc_insertion_point(destructor:APurchaseMore)
  SharedDtor();
}

void APurchaseMore::SharedDtor() {
  if (this != default_instance_) {
  }
}

void APurchaseMore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APurchaseMore::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APurchaseMore_descriptor_;
}

const APurchaseMore& APurchaseMore::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_world_5famazon_2eproto();
  return *default_instance_;
}

APurchaseMore* APurchaseMore::default_instance_ = NULL;

APurchaseMore* APurchaseMore::New(::google::protobuf::Arena* arena) const {
  APurchaseMore* n = new APurchaseMore;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APurchaseMore::Clear() {
// @@protoc_insertion_point(message_clear_start:APurchaseMore)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(APurchaseMore, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<APurchaseMore*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(seqnum_, whnum_);

#undef ZR_HELPER_
#undef ZR_

  things_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool APurchaseMore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APurchaseMore)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 whnum = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &whnum_)));
          set_has_whnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_things;
        break;
      }

      // repeated .AProduct things = 2;
      case 2: {
        if (tag == 18) {
         parse_things:
          DO_(input->IncrementRecursionDepth());
         parse_loop_things:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_things()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_things;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_seqnum;
        break;
      }

      // required int64 seqnum = 3;
      case 3: {
        if (tag == 24) {
         parse_seqnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
          set_has_seqnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APurchaseMore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APurchaseMore)
  return false;
#undef DO_
}

void APurchaseMore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APurchaseMore)
  // required int32 whnum = 1;
  if (has_whnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->whnum(), output);
  }

  // repeated .AProduct things = 2;
  for (unsigned int i = 0, n = this->things_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->things(i), output);
  }

  // required int64 seqnum = 3;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APurchaseMore)
}

::google::protobuf::uint8* APurchaseMore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APurchaseMore)
  // required int32 whnum = 1;
  if (has_whnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->whnum(), target);
  }

  // repeated .AProduct things = 2;
  for (unsigned int i = 0, n = this->things_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->things(i), false, target);
  }

  // required int64 seqnum = 3;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APurchaseMore)
  return target;
}

int APurchaseMore::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APurchaseMore)
  int total_size = 0;

  if (has_whnum()) {
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
int APurchaseMore::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:APurchaseMore)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required int32 whnum = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->whnum());

    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .AProduct things = 2;
  total_size += 1 * this->things_size();
  for (int i = 0; i < this->things_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->things(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APurchaseMore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APurchaseMore)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const APurchaseMore* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const APurchaseMore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APurchaseMore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APurchaseMore)
    MergeFrom(*source);
  }
}

void APurchaseMore::MergeFrom(const APurchaseMore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APurchaseMore)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  things_.MergeFrom(from.things_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_whnum()) {
      set_whnum(from.whnum());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void APurchaseMore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APurchaseMore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APurchaseMore::CopyFrom(const APurchaseMore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APurchaseMore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APurchaseMore::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->things())) return false;
  return true;
}

void APurchaseMore::Swap(APurchaseMore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APurchaseMore::InternalSwap(APurchaseMore* other) {
  std::swap(whnum_, other->whnum_);
  things_.UnsafeArenaSwap(&other->things_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APurchaseMore::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = APurchaseMore_descriptor_;
  metadata.reflection = APurchaseMore_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APurchaseMore

// required int32 whnum = 1;
bool APurchaseMore::has_whnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void APurchaseMore::set_has_whnum() {
  _has_bits_[0] |= 0x00000001u;
}
void APurchaseMore::clear_has_whnum() {
  _has_bits_[0] &= ~0x00000001u;
}
void APurchaseMore::clear_whnum() {
  whnum_ = 0;
  clear_has_whnum();
}
 ::google::protobuf::int32 APurchaseMore::whnum() const {
  // @@protoc_insertion_point(field_get:APurchaseMore.whnum)
  return whnum_;
}
 void APurchaseMore::set_whnum(::google::protobuf::int32 value) {
  set_has_whnum();
  whnum_ = value;
  // @@protoc_insertion_point(field_set:APurchaseMore.whnum)
}

// repeated .AProduct things = 2;
int APurchaseMore::things_size() const {
  return things_.size();
}
void APurchaseMore::clear_things() {
  things_.Clear();
}
const ::AProduct& APurchaseMore::things(int index) const {
  // @@protoc_insertion_point(field_get:APurchaseMore.things)
  return things_.Get(index);
}
::AProduct* APurchaseMore::mutable_things(int index) {
  // @@protoc_insertion_point(field_mutable:APurchaseMore.things)
  return things_.Mutable(index);
}
::AProduct* APurchaseMore::add_things() {
  // @@protoc_insertion_point(field_add:APurchaseMore.things)
  return things_.Add();
}
::google::protobuf::RepeatedPtrField< ::AProduct >*
APurchaseMore::mutable_things() {
  // @@protoc_insertion_point(field_mutable_list:APurchaseMore.things)
  return &things_;
}
const ::google::protobuf::RepeatedPtrField< ::AProduct >&
APurchaseMore::things() const {
  // @@protoc_insertion_point(field_list:APurchaseMore.things)
  return things_;
}

// required int64 seqnum = 3;
bool APurchaseMore::has_seqnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void APurchaseMore::set_has_seqnum() {
  _has_bits_[0] |= 0x00000004u;
}
void APurchaseMore::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000004u;
}
void APurchaseMore::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
 ::google::protobuf::int64 APurchaseMore::seqnum() const {
  // @@protoc_insertion_point(field_get:APurchaseMore.seqnum)
  return seqnum_;
}
 void APurchaseMore::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:APurchaseMore.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AErr::kErrFieldNumber;
const int AErr::kOriginseqnumFieldNumber;
const int AErr::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AErr::AErr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AErr)
}

void AErr::InitAsDefaultInstance() {
}

AErr::AErr(const AErr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AErr)
}

void AErr::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  originseqnum_ = GOOGLE_LONGLONG(0);
  seqnum_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AErr::~AErr() {
  // @@protoc_insertion_point(destructor:AErr)
  SharedDtor();
}

void AErr::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AErr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AErr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AErr_descriptor_;
}

const AErr& AErr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_world_5famazon_2eproto();
  return *default_instance_;
}

AErr* AErr::default_instance_ = NULL;

AErr* AErr::New(::google::protobuf::Arena* arena) const {
  AErr* n = new AErr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AErr::Clear() {
// @@protoc_insertion_point(message_clear_start:AErr)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AErr, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AErr*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(originseqnum_, seqnum_);
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AErr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AErr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string err = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AErr.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_originseqnum;
        break;
      }

      // required int64 originseqnum = 2;
      case 2: {
        if (tag == 16) {
         parse_originseqnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &originseqnum_)));
          set_has_originseqnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_seqnum;
        break;
      }

      // required int64 seqnum = 3;
      case 3: {
        if (tag == 24) {
         parse_seqnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
          set_has_seqnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AErr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AErr)
  return false;
#undef DO_
}

void AErr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AErr)
  // required string err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AErr.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->err(), output);
  }

  // required int64 originseqnum = 2;
  if (has_originseqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->originseqnum(), output);
  }

  // required int64 seqnum = 3;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AErr)
}

::google::protobuf::uint8* AErr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AErr)
  // required string err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AErr.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->err(), target);
  }

  // required int64 originseqnum = 2;
  if (has_originseqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->originseqnum(), target);
  }

  // required int64 seqnum = 3;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AErr)
  return target;
}

int AErr::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AErr)
  int total_size = 0;

  if (has_err()) {
    // required string err = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (has_originseqnum()) {
    // required int64 originseqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->originseqnum());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
int AErr::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AErr)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string err = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());

    // required int64 originseqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->originseqnum());

    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AErr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AErr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AErr* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AErr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AErr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AErr)
    MergeFrom(*source);
  }
}

void AErr::MergeFrom(const AErr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AErr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_originseqnum()) {
      set_originseqnum(from.originseqnum());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AErr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AErr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AErr::CopyFrom(const AErr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AErr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AErr::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void AErr::Swap(AErr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AErr::InternalSwap(AErr* other) {
  err_.Swap(&other->err_);
  std::swap(originseqnum_, other->originseqnum_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AErr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AErr_descriptor_;
  metadata.reflection = AErr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AErr

// required string err = 1;
bool AErr::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AErr::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
void AErr::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
void AErr::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
 const ::std::string& AErr::err() const {
  // @@protoc_insertion_point(field_get:AErr.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AErr::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AErr.err)
}
 void AErr::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AErr.err)
}
 void AErr::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AErr.err)
}
 ::std::string* AErr::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:AErr.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AErr::release_err() {
  // @@protoc_insertion_point(field_release:AErr.err)
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AErr::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:AErr.err)
}

// required int64 originseqnum = 2;
bool AErr::has_originseqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AErr::set_has_originseqnum() {
  _has_bits_[0] |= 0x00000002u;
}
void AErr::clear_has_originseqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
void AErr::clear_originseqnum() {
  originseqnum_ = GOOGLE_LONGLONG(0);
  clear_has_originseqnum();
}
 ::google::protobuf::int64 AErr::originseqnum() const {
  // @@protoc_insertion_point(field_get:AErr.originseqnum)
  return originseqnum_;
}
 void AErr::set_originseqnum(::google::protobuf::int64 value) {
  set_has_originseqnum();
  originseqnum_ = value;
  // @@protoc_insertion_point(field_set:AErr.originseqnum)
}

// required int64 seqnum = 3;
bool AErr::has_seqnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AErr::set_has_seqnum() {
  _has_bits_[0] |= 0x00000004u;
}
void AErr::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000004u;
}
void AErr::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
 ::google::protobuf::int64 AErr::seqnum() const {
  // @@protoc_insertion_point(field_get:AErr.seqnum)
  return seqnum_;
}
 void AErr::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:AErr.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AQuery::kPackageidFieldNumber;
const int AQuery::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AQuery::AQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AQuery)
}

void AQuery::InitAsDefaultInstance() {
}

AQuery::AQuery(const AQuery& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AQuery)
}

void AQuery::SharedCtor() {
  _cached_size_ = 0;
  packageid_ = GOOGLE_LONGLONG(0);
  seqnum_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AQuery::~AQuery() {
  // @@protoc_insertion_point(destructor:AQuery)
  SharedDtor();
}

void AQuery::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AQuery::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AQuery_descriptor_;
}

const AQuery& AQuery::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_world_5famazon_2eproto();
  return *default_instance_;
}

AQuery* AQuery::default_instance_ = NULL;

AQuery* AQuery::New(::google::protobuf::Arena* arena) const {
  AQuery* n = new AQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:AQuery)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AQuery, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AQuery*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(packageid_, seqnum_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 packageid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
          set_has_packageid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_seqnum;
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (tag == 16) {
         parse_seqnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
          set_has_seqnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AQuery)
  return false;
#undef DO_
}

void AQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AQuery)
  // required int64 packageid = 1;
  if (has_packageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->packageid(), output);
  }

  // required int64 seqnum = 2;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AQuery)
}

::google::protobuf::uint8* AQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AQuery)
  // required int64 packageid = 1;
  if (has_packageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->packageid(), target);
  }

  // required int64 seqnum = 2;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AQuery)
  return target;
}

int AQuery::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AQuery)
  int total_size = 0;

  if (has_packageid()) {
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
int AQuery::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AQuery)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AQuery)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AQuery* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AQuery)
    MergeFrom(*source);
  }
}

void AQuery::MergeFrom(const AQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AQuery)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packageid()) {
      set_packageid(from.packageid());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AQuery::CopyFrom(const AQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AQuery::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void AQuery::Swap(AQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AQuery::InternalSwap(AQuery* other) {
  std::swap(packageid_, other->packageid_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AQuery::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AQuery_descriptor_;
  metadata.reflection = AQuery_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AQuery

// required int64 packageid = 1;
bool AQuery::has_packageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AQuery::set_has_packageid() {
  _has_bits_[0] |= 0x00000001u;
}
void AQuery::clear_has_packageid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AQuery::clear_packageid() {
  packageid_ = GOOGLE_LONGLONG(0);
  clear_has_packageid();
}
 ::google::protobuf::int64 AQuery::packageid() const {
  // @@protoc_insertion_point(field_get:AQuery.packageid)
  return packageid_;
}
 void AQuery::set_packageid(::google::protobuf::int64 value) {
  set_has_packageid();
  packageid_ = value;
  // @@protoc_insertion_point(field_set:AQuery.packageid)
}

// required int64 seqnum = 2;
bool AQuery::has_seqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AQuery::set_has_seqnum() {
  _has_bits_[0] |= 0x00000002u;
}
void AQuery::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
void AQuery::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
 ::google::protobuf::int64 AQuery::seqnum() const {
  // @@protoc_insertion_point(field_get:AQuery.seqnum)
  return seqnum_;
}
 void AQuery::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:AQuery.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int APackage::kPackageidFieldNumber;
const int APackage::kStatusFieldNumber;
const int APackage::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

APackage::APackage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:APackage)
}

void APackage::InitAsDefaultInstance() {
}

APackage::APackage(const APackage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:APackage)
}

void APackage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  packageid_ = GOOGLE_LONGLONG(0);
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  seqnum_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

APackage::~APackage() {
  // @@protoc_insertion_point(destructor:APackage)
  SharedDtor();
}

void APackage::SharedDtor() {
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void APackage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* APackage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return APackage_descriptor_;
}

const APackage& APackage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_world_5famazon_2eproto();
  return *default_instance_;
}

APackage* APackage::default_instance_ = NULL;

APackage* APackage::New(::google::protobuf::Arena* arena) const {
  APackage* n = new APackage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void APackage::Clear() {
// @@protoc_insertion_point(message_clear_start:APackage)
  if (_has_bits_[0 / 32] & 7u) {
    packageid_ = GOOGLE_LONGLONG(0);
    if (has_status()) {
      status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    seqnum_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool APackage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:APackage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 packageid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &packageid_)));
          set_has_packageid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_status;
        break;
      }

      // required string status = 2;
      case 2: {
        if (tag == 18) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->status().data(), this->status().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "APackage.status");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_seqnum;
        break;
      }

      // required int64 seqnum = 3;
      case 3: {
        if (tag == 24) {
         parse_seqnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
          set_has_seqnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:APackage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:APackage)
  return false;
#undef DO_
}

void APackage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:APackage)
  // required int64 packageid = 1;
  if (has_packageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->packageid(), output);
  }

  // required string status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "APackage.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->status(), output);
  }

  // required int64 seqnum = 3;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:APackage)
}

::google::protobuf::uint8* APackage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:APackage)
  // required int64 packageid = 1;
  if (has_packageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->packageid(), target);
  }

  // required string status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status().data(), this->status().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "APackage.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->status(), target);
  }

  // required int64 seqnum = 3;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:APackage)
  return target;
}

int APackage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:APackage)
  int total_size = 0;

  if (has_packageid()) {
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());
  }

  if (has_status()) {
    // required string status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
int APackage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:APackage)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 packageid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->packageid());

    // required string status = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());

    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void APackage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:APackage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const APackage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const APackage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:APackage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:APackage)
    MergeFrom(*source);
  }
}

void APackage::MergeFrom(const APackage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:APackage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packageid()) {
      set_packageid(from.packageid());
    }
    if (from.has_status()) {
      set_has_status();
      status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void APackage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:APackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void APackage::CopyFrom(const APackage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:APackage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool APackage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void APackage::Swap(APackage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void APackage::InternalSwap(APackage* other) {
  std::swap(packageid_, other->packageid_);
  status_.Swap(&other->status_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata APackage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = APackage_descriptor_;
  metadata.reflection = APackage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// APackage

// required int64 packageid = 1;
bool APackage::has_packageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void APackage::set_has_packageid() {
  _has_bits_[0] |= 0x00000001u;
}
void APackage::clear_has_packageid() {
  _has_bits_[0] &= ~0x00000001u;
}
void APackage::clear_packageid() {
  packageid_ = GOOGLE_LONGLONG(0);
  clear_has_packageid();
}
 ::google::protobuf::int64 APackage::packageid() const {
  // @@protoc_insertion_point(field_get:APackage.packageid)
  return packageid_;
}
 void APackage::set_packageid(::google::protobuf::int64 value) {
  set_has_packageid();
  packageid_ = value;
  // @@protoc_insertion_point(field_set:APackage.packageid)
}

// required string status = 2;
bool APackage::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void APackage::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
void APackage::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
void APackage::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_status();
}
 const ::std::string& APackage::status() const {
  // @@protoc_insertion_point(field_get:APackage.status)
  return status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void APackage::set_status(const ::std::string& value) {
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:APackage.status)
}
 void APackage::set_status(const char* value) {
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:APackage.status)
}
 void APackage::set_status(const char* value, size_t size) {
  set_has_status();
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:APackage.status)
}
 ::std::string* APackage::mutable_status() {
  set_has_status();
  // @@protoc_insertion_point(field_mutable:APackage.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* APackage::release_status() {
  // @@protoc_insertion_point(field_release:APackage.status)
  clear_has_status();
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void APackage::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    set_has_status();
  } else {
    clear_has_status();
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:APackage.status)
}

// required int64 seqnum = 3;
bool APackage::has_seqnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void APackage::set_has_seqnum() {
  _has_bits_[0] |= 0x00000004u;
}
void APackage::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000004u;
}
void APackage::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
 ::google::protobuf::int64 APackage::seqnum() const {
  // @@protoc_insertion_point(field_get:APackage.seqnum)
  return seqnum_;
}
 void APackage::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:APackage.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ACommands::kBuyFieldNumber;
const int ACommands::kTopackFieldNumber;
const int ACommands::kLoadFieldNumber;
const int ACommands::kQueriesFieldNumber;
const int ACommands::kSimspeedFieldNumber;
const int ACommands::kDisconnectFieldNumber;
const int ACommands::kAcksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ACommands::ACommands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ACommands)
}

void ACommands::InitAsDefaultInstance() {
}

ACommands::ACommands(const ACommands& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ACommands)
}

void ACommands::SharedCtor() {
  _cached_size_ = 0;
  simspeed_ = 0u;
  disconnect_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ACommands::~ACommands() {
  // @@protoc_insertion_point(destructor:ACommands)
  SharedDtor();
}

void ACommands::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ACommands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ACommands::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ACommands_descriptor_;
}

const ACommands& ACommands::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_world_5famazon_2eproto();
  return *default_instance_;
}

ACommands* ACommands::default_instance_ = NULL;

ACommands* ACommands::New(::google::protobuf::Arena* arena) const {
  ACommands* n = new ACommands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ACommands::Clear() {
// @@protoc_insertion_point(message_clear_start:ACommands)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ACommands, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ACommands*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(simspeed_, disconnect_);

#undef ZR_HELPER_
#undef ZR_

  buy_.Clear();
  topack_.Clear();
  load_.Clear();
  queries_.Clear();
  acks_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ACommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ACommands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .APurchaseMore buy = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_buy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_buy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_buy;
        if (input->ExpectTag(18)) goto parse_loop_topack;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .APack topack = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_topack:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_topack()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_topack;
        if (input->ExpectTag(26)) goto parse_loop_load;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .APutOnTruck load = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_load:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_load()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_load;
        if (input->ExpectTag(34)) goto parse_loop_queries;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .AQuery queries = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_queries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_queries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_queries;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(40)) goto parse_simspeed;
        break;
      }

      // optional uint32 simspeed = 5;
      case 5: {
        if (tag == 40) {
         parse_simspeed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &simspeed_)));
          set_has_simspeed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_disconnect;
        break;
      }

      // optional bool disconnect = 6;
      case 6: {
        if (tag == 48) {
         parse_disconnect:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disconnect_)));
          set_has_disconnect();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_acks;
        break;
      }

      // repeated int64 acks = 7;
      case 7: {
        if (tag == 56) {
         parse_acks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 56, input, this->mutable_acks())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_acks())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_acks;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ACommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ACommands)
  return false;
#undef DO_
}

void ACommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ACommands)
  // repeated .APurchaseMore buy = 1;
  for (unsigned int i = 0, n = this->buy_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->buy(i), output);
  }

  // repeated .APack topack = 2;
  for (unsigned int i = 0, n = this->topack_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->topack(i), output);
  }

  // repeated .APutOnTruck load = 3;
  for (unsigned int i = 0, n = this->load_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->load(i), output);
  }

  // repeated .AQuery queries = 4;
  for (unsigned int i = 0, n = this->queries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->queries(i), output);
  }

  // optional uint32 simspeed = 5;
  if (has_simspeed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->simspeed(), output);
  }

  // optional bool disconnect = 6;
  if (has_disconnect()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->disconnect(), output);
  }

  // repeated int64 acks = 7;
  for (int i = 0; i < this->acks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      7, this->acks(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ACommands)
}

::google::protobuf::uint8* ACommands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ACommands)
  // repeated .APurchaseMore buy = 1;
  for (unsigned int i = 0, n = this->buy_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->buy(i), false, target);
  }

  // repeated .APack topack = 2;
  for (unsigned int i = 0, n = this->topack_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->topack(i), false, target);
  }

  // repeated .APutOnTruck load = 3;
  for (unsigned int i = 0, n = this->load_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->load(i), false, target);
  }

  // repeated .AQuery queries = 4;
  for (unsigned int i = 0, n = this->queries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->queries(i), false, target);
  }

  // optional uint32 simspeed = 5;
  if (has_simspeed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->simspeed(), target);
  }

  // optional bool disconnect = 6;
  if (has_disconnect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->disconnect(), target);
  }

  // repeated int64 acks = 7;
  for (int i = 0; i < this->acks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(7, this->acks(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ACommands)
  return target;
}

int ACommands::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ACommands)
  int total_size = 0;

  if (_has_bits_[4 / 32] & 48u) {
    // optional uint32 simspeed = 5;
    if (has_simspeed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->simspeed());
    }

    // optional bool disconnect = 6;
    if (has_disconnect()) {
      total_size += 1 + 1;
    }

  }
  // repeated .APurchaseMore buy = 1;
  total_size += 1 * this->buy_size();
  for (int i = 0; i < this->buy_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buy(i));
  }

  // repeated .APack topack = 2;
  total_size += 1 * this->topack_size();
  for (int i = 0; i < this->topack_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->topack(i));
  }

  // repeated .APutOnTruck load = 3;
  total_size += 1 * this->load_size();
  for (int i = 0; i < this->load_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->load(i));
  }

  // repeated .AQuery queries = 4;
  total_size += 1 * this->queries_size();
  for (int i = 0; i < this->queries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->queries(i));
  }

  // repeated int64 acks = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->acks_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->acks(i));
    }
    total_size += 1 * this->acks_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ACommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ACommands)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ACommands* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ACommands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ACommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ACommands)
    MergeFrom(*source);
  }
}

void ACommands::MergeFrom(const ACommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ACommands)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  buy_.MergeFrom(from.buy_);
  topack_.MergeFrom(from.topack_);
  load_.MergeFrom(from.load_);
  queries_.MergeFrom(from.queries_);
  acks_.MergeFrom(from.acks_);
  if (from._has_bits_[4 / 32] & (0xffu << (4 % 32))) {
    if (from.has_simspeed()) {
      set_simspeed(from.simspeed());
    }
    if (from.has_disconnect()) {
      set_disconnect(from.disconnect());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ACommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ACommands::CopyFrom(const ACommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ACommands::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->buy())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->topack())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->load())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->queries())) return false;
  return true;
}

void ACommands::Swap(ACommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ACommands::InternalSwap(ACommands* other) {
  buy_.UnsafeArenaSwap(&other->buy_);
  topack_.UnsafeArenaSwap(&other->topack_);
  load_.UnsafeArenaSwap(&other->load_);
  queries_.UnsafeArenaSwap(&other->queries_);
  std::swap(simspeed_, other->simspeed_);
  std::swap(disconnect_, other->disconnect_);
  acks_.UnsafeArenaSwap(&other->acks_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ACommands::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ACommands_descriptor_;
  metadata.reflection = ACommands_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ACommands

// repeated .APurchaseMore buy = 1;
int ACommands::buy_size() const {
  return buy_.size();
}
void ACommands::clear_buy() {
  buy_.Clear();
}
const ::APurchaseMore& ACommands::buy(int index) const {
  // @@protoc_insertion_point(field_get:ACommands.buy)
  return buy_.Get(index);
}
::APurchaseMore* ACommands::mutable_buy(int index) {
  // @@protoc_insertion_point(field_mutable:ACommands.buy)
  return buy_.Mutable(index);
}
::APurchaseMore* ACommands::add_buy() {
  // @@protoc_insertion_point(field_add:ACommands.buy)
  return buy_.Add();
}
::google::protobuf::RepeatedPtrField< ::APurchaseMore >*
ACommands::mutable_buy() {
  // @@protoc_insertion_point(field_mutable_list:ACommands.buy)
  return &buy_;
}
const ::google::protobuf::RepeatedPtrField< ::APurchaseMore >&
ACommands::buy() const {
  // @@protoc_insertion_point(field_list:ACommands.buy)
  return buy_;
}

// repeated .APack topack = 2;
int ACommands::topack_size() const {
  return topack_.size();
}
void ACommands::clear_topack() {
  topack_.Clear();
}
const ::APack& ACommands::topack(int index) const {
  // @@protoc_insertion_point(field_get:ACommands.topack)
  return topack_.Get(index);
}
::APack* ACommands::mutable_topack(int index) {
  // @@protoc_insertion_point(field_mutable:ACommands.topack)
  return topack_.Mutable(index);
}
::APack* ACommands::add_topack() {
  // @@protoc_insertion_point(field_add:ACommands.topack)
  return topack_.Add();
}
::google::protobuf::RepeatedPtrField< ::APack >*
ACommands::mutable_topack() {
  // @@protoc_insertion_point(field_mutable_list:ACommands.topack)
  return &topack_;
}
const ::google::protobuf::RepeatedPtrField< ::APack >&
ACommands::topack() const {
  // @@protoc_insertion_point(field_list:ACommands.topack)
  return topack_;
}

// repeated .APutOnTruck load = 3;
int ACommands::load_size() const {
  return load_.size();
}
void ACommands::clear_load() {
  load_.Clear();
}
const ::APutOnTruck& ACommands::load(int index) const {
  // @@protoc_insertion_point(field_get:ACommands.load)
  return load_.Get(index);
}
::APutOnTruck* ACommands::mutable_load(int index) {
  // @@protoc_insertion_point(field_mutable:ACommands.load)
  return load_.Mutable(index);
}
::APutOnTruck* ACommands::add_load() {
  // @@protoc_insertion_point(field_add:ACommands.load)
  return load_.Add();
}
::google::protobuf::RepeatedPtrField< ::APutOnTruck >*
ACommands::mutable_load() {
  // @@protoc_insertion_point(field_mutable_list:ACommands.load)
  return &load_;
}
const ::google::protobuf::RepeatedPtrField< ::APutOnTruck >&
ACommands::load() const {
  // @@protoc_insertion_point(field_list:ACommands.load)
  return load_;
}

// repeated .AQuery queries = 4;
int ACommands::queries_size() const {
  return queries_.size();
}
void ACommands::clear_queries() {
  queries_.Clear();
}
const ::AQuery& ACommands::queries(int index) const {
  // @@protoc_insertion_point(field_get:ACommands.queries)
  return queries_.Get(index);
}
::AQuery* ACommands::mutable_queries(int index) {
  // @@protoc_insertion_point(field_mutable:ACommands.queries)
  return queries_.Mutable(index);
}
::AQuery* ACommands::add_queries() {
  // @@protoc_insertion_point(field_add:ACommands.queries)
  return queries_.Add();
}
::google::protobuf::RepeatedPtrField< ::AQuery >*
ACommands::mutable_queries() {
  // @@protoc_insertion_point(field_mutable_list:ACommands.queries)
  return &queries_;
}
const ::google::protobuf::RepeatedPtrField< ::AQuery >&
ACommands::queries() const {
  // @@protoc_insertion_point(field_list:ACommands.queries)
  return queries_;
}

// optional uint32 simspeed = 5;
bool ACommands::has_simspeed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ACommands::set_has_simspeed() {
  _has_bits_[0] |= 0x00000010u;
}
void ACommands::clear_has_simspeed() {
  _has_bits_[0] &= ~0x00000010u;
}
void ACommands::clear_simspeed() {
  simspeed_ = 0u;
  clear_has_simspeed();
}
 ::google::protobuf::uint32 ACommands::simspeed() const {
  // @@protoc_insertion_point(field_get:ACommands.simspeed)
  return simspeed_;
}
 void ACommands::set_simspeed(::google::protobuf::uint32 value) {
  set_has_simspeed();
  simspeed_ = value;
  // @@protoc_insertion_point(field_set:ACommands.simspeed)
}

// optional bool disconnect = 6;
bool ACommands::has_disconnect() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ACommands::set_has_disconnect() {
  _has_bits_[0] |= 0x00000020u;
}
void ACommands::clear_has_disconnect() {
  _has_bits_[0] &= ~0x00000020u;
}
void ACommands::clear_disconnect() {
  disconnect_ = false;
  clear_has_disconnect();
}
 bool ACommands::disconnect() const {
  // @@protoc_insertion_point(field_get:ACommands.disconnect)
  return disconnect_;
}
 void ACommands::set_disconnect(bool value) {
  set_has_disconnect();
  disconnect_ = value;
  // @@protoc_insertion_point(field_set:ACommands.disconnect)
}

// repeated int64 acks = 7;
int ACommands::acks_size() const {
  return acks_.size();
}
void ACommands::clear_acks() {
  acks_.Clear();
}
 ::google::protobuf::int64 ACommands::acks(int index) const {
  // @@protoc_insertion_point(field_get:ACommands.acks)
  return acks_.Get(index);
}
 void ACommands::set_acks(int index, ::google::protobuf::int64 value) {
  acks_.Set(index, value);
  // @@protoc_insertion_point(field_set:ACommands.acks)
}
 void ACommands::add_acks(::google::protobuf::int64 value) {
  acks_.Add(value);
  // @@protoc_insertion_point(field_add:ACommands.acks)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ACommands::acks() const {
  // @@protoc_insertion_point(field_list:ACommands.acks)
  return acks_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ACommands::mutable_acks() {
  // @@protoc_insertion_point(field_mutable_list:ACommands.acks)
  return &acks_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AResponses::kArrivedFieldNumber;
const int AResponses::kReadyFieldNumber;
const int AResponses::kLoadedFieldNumber;
const int AResponses::kFinishedFieldNumber;
const int AResponses::kErrorFieldNumber;
const int AResponses::kAcksFieldNumber;
const int AResponses::kPackagestatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AResponses::AResponses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AResponses)
}

void AResponses::InitAsDefaultInstance() {
}

AResponses::AResponses(const AResponses& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AResponses)
}

void AResponses::SharedCtor() {
  _cached_size_ = 0;
  finished_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AResponses::~AResponses() {
  // @@protoc_insertion_point(destructor:AResponses)
  SharedDtor();
}

void AResponses::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AResponses::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AResponses::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AResponses_descriptor_;
}

const AResponses& AResponses::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_world_5famazon_2eproto();
  return *default_instance_;
}

AResponses* AResponses::default_instance_ = NULL;

AResponses* AResponses::New(::google::protobuf::Arena* arena) const {
  AResponses* n = new AResponses;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AResponses::Clear() {
// @@protoc_insertion_point(message_clear_start:AResponses)
  finished_ = false;
  arrived_.Clear();
  ready_.Clear();
  loaded_.Clear();
  error_.Clear();
  acks_.Clear();
  packagestatus_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AResponses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AResponses)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .APurchaseMore arrived = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_arrived:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_arrived()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_arrived;
        if (input->ExpectTag(18)) goto parse_loop_ready;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .APacked ready = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ready:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ready()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_ready;
        if (input->ExpectTag(26)) goto parse_loop_loaded;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ALoaded loaded = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_loaded:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_loaded()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_loaded;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_finished;
        break;
      }

      // optional bool finished = 4;
      case 4: {
        if (tag == 32) {
         parse_finished:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &finished_)));
          set_has_finished();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_error;
        break;
      }

      // repeated .AErr error = 5;
      case 5: {
        if (tag == 42) {
         parse_error:
          DO_(input->IncrementRecursionDepth());
         parse_loop_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_error;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(48)) goto parse_acks;
        break;
      }

      // repeated int64 acks = 6;
      case 6: {
        if (tag == 48) {
         parse_acks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 48, input, this->mutable_acks())));
        } else if (tag == 50) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_acks())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_acks;
        if (input->ExpectTag(58)) goto parse_packagestatus;
        break;
      }

      // repeated .APackage packagestatus = 7;
      case 7: {
        if (tag == 58) {
         parse_packagestatus:
          DO_(input->IncrementRecursionDepth());
         parse_loop_packagestatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_packagestatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_packagestatus;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AResponses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AResponses)
  return false;
#undef DO_
}

void AResponses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AResponses)
  // repeated .APurchaseMore arrived = 1;
  for (unsigned int i = 0, n = this->arrived_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->arrived(i), output);
  }

  // repeated .APacked ready = 2;
  for (unsigned int i = 0, n = this->ready_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->ready(i), output);
  }

  // repeated .ALoaded loaded = 3;
  for (unsigned int i = 0, n = this->loaded_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->loaded(i), output);
  }

  // optional bool finished = 4;
  if (has_finished()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->finished(), output);
  }

  // repeated .AErr error = 5;
  for (unsigned int i = 0, n = this->error_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->error(i), output);
  }

  // repeated int64 acks = 6;
  for (int i = 0; i < this->acks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      6, this->acks(i), output);
  }

  // repeated .APackage packagestatus = 7;
  for (unsigned int i = 0, n = this->packagestatus_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->packagestatus(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AResponses)
}

::google::protobuf::uint8* AResponses::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AResponses)
  // repeated .APurchaseMore arrived = 1;
  for (unsigned int i = 0, n = this->arrived_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->arrived(i), false, target);
  }

  // repeated .APacked ready = 2;
  for (unsigned int i = 0, n = this->ready_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->ready(i), false, target);
  }

  // repeated .ALoaded loaded = 3;
  for (unsigned int i = 0, n = this->loaded_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->loaded(i), false, target);
  }

  // optional bool finished = 4;
  if (has_finished()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->finished(), target);
  }

  // repeated .AErr error = 5;
  for (unsigned int i = 0, n = this->error_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->error(i), false, target);
  }

  // repeated int64 acks = 6;
  for (int i = 0; i < this->acks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(6, this->acks(i), target);
  }

  // repeated .APackage packagestatus = 7;
  for (unsigned int i = 0, n = this->packagestatus_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->packagestatus(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AResponses)
  return target;
}

int AResponses::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AResponses)
  int total_size = 0;

  // optional bool finished = 4;
  if (has_finished()) {
    total_size += 1 + 1;
  }

  // repeated .APurchaseMore arrived = 1;
  total_size += 1 * this->arrived_size();
  for (int i = 0; i < this->arrived_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->arrived(i));
  }

  // repeated .APacked ready = 2;
  total_size += 1 * this->ready_size();
  for (int i = 0; i < this->ready_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ready(i));
  }

  // repeated .ALoaded loaded = 3;
  total_size += 1 * this->loaded_size();
  for (int i = 0; i < this->loaded_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->loaded(i));
  }

  // repeated .AErr error = 5;
  total_size += 1 * this->error_size();
  for (int i = 0; i < this->error_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->error(i));
  }

  // repeated int64 acks = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->acks_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->acks(i));
    }
    total_size += 1 * this->acks_size() + data_size;
  }

  // repeated .APackage packagestatus = 7;
  total_size += 1 * this->packagestatus_size();
  for (int i = 0; i < this->packagestatus_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->packagestatus(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AResponses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AResponses)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AResponses* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AResponses>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AResponses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AResponses)
    MergeFrom(*source);
  }
}

void AResponses::MergeFrom(const AResponses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AResponses)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  arrived_.MergeFrom(from.arrived_);
  ready_.MergeFrom(from.ready_);
  loaded_.MergeFrom(from.loaded_);
  error_.MergeFrom(from.error_);
  acks_.MergeFrom(from.acks_);
  packagestatus_.MergeFrom(from.packagestatus_);
  if (from._has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    if (from.has_finished()) {
      set_finished(from.finished());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AResponses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AResponses::CopyFrom(const AResponses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AResponses::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->arrived())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ready())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->loaded())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->error())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->packagestatus())) return false;
  return true;
}

void AResponses::Swap(AResponses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AResponses::InternalSwap(AResponses* other) {
  arrived_.UnsafeArenaSwap(&other->arrived_);
  ready_.UnsafeArenaSwap(&other->ready_);
  loaded_.UnsafeArenaSwap(&other->loaded_);
  std::swap(finished_, other->finished_);
  error_.UnsafeArenaSwap(&other->error_);
  acks_.UnsafeArenaSwap(&other->acks_);
  packagestatus_.UnsafeArenaSwap(&other->packagestatus_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AResponses::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AResponses_descriptor_;
  metadata.reflection = AResponses_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AResponses

// repeated .APurchaseMore arrived = 1;
int AResponses::arrived_size() const {
  return arrived_.size();
}
void AResponses::clear_arrived() {
  arrived_.Clear();
}
const ::APurchaseMore& AResponses::arrived(int index) const {
  // @@protoc_insertion_point(field_get:AResponses.arrived)
  return arrived_.Get(index);
}
::APurchaseMore* AResponses::mutable_arrived(int index) {
  // @@protoc_insertion_point(field_mutable:AResponses.arrived)
  return arrived_.Mutable(index);
}
::APurchaseMore* AResponses::add_arrived() {
  // @@protoc_insertion_point(field_add:AResponses.arrived)
  return arrived_.Add();
}
::google::protobuf::RepeatedPtrField< ::APurchaseMore >*
AResponses::mutable_arrived() {
  // @@protoc_insertion_point(field_mutable_list:AResponses.arrived)
  return &arrived_;
}
const ::google::protobuf::RepeatedPtrField< ::APurchaseMore >&
AResponses::arrived() const {
  // @@protoc_insertion_point(field_list:AResponses.arrived)
  return arrived_;
}

// repeated .APacked ready = 2;
int AResponses::ready_size() const {
  return ready_.size();
}
void AResponses::clear_ready() {
  ready_.Clear();
}
const ::APacked& AResponses::ready(int index) const {
  // @@protoc_insertion_point(field_get:AResponses.ready)
  return ready_.Get(index);
}
::APacked* AResponses::mutable_ready(int index) {
  // @@protoc_insertion_point(field_mutable:AResponses.ready)
  return ready_.Mutable(index);
}
::APacked* AResponses::add_ready() {
  // @@protoc_insertion_point(field_add:AResponses.ready)
  return ready_.Add();
}
::google::protobuf::RepeatedPtrField< ::APacked >*
AResponses::mutable_ready() {
  // @@protoc_insertion_point(field_mutable_list:AResponses.ready)
  return &ready_;
}
const ::google::protobuf::RepeatedPtrField< ::APacked >&
AResponses::ready() const {
  // @@protoc_insertion_point(field_list:AResponses.ready)
  return ready_;
}

// repeated .ALoaded loaded = 3;
int AResponses::loaded_size() const {
  return loaded_.size();
}
void AResponses::clear_loaded() {
  loaded_.Clear();
}
const ::ALoaded& AResponses::loaded(int index) const {
  // @@protoc_insertion_point(field_get:AResponses.loaded)
  return loaded_.Get(index);
}
::ALoaded* AResponses::mutable_loaded(int index) {
  // @@protoc_insertion_point(field_mutable:AResponses.loaded)
  return loaded_.Mutable(index);
}
::ALoaded* AResponses::add_loaded() {
  // @@protoc_insertion_point(field_add:AResponses.loaded)
  return loaded_.Add();
}
::google::protobuf::RepeatedPtrField< ::ALoaded >*
AResponses::mutable_loaded() {
  // @@protoc_insertion_point(field_mutable_list:AResponses.loaded)
  return &loaded_;
}
const ::google::protobuf::RepeatedPtrField< ::ALoaded >&
AResponses::loaded() const {
  // @@protoc_insertion_point(field_list:AResponses.loaded)
  return loaded_;
}

// optional bool finished = 4;
bool AResponses::has_finished() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AResponses::set_has_finished() {
  _has_bits_[0] |= 0x00000008u;
}
void AResponses::clear_has_finished() {
  _has_bits_[0] &= ~0x00000008u;
}
void AResponses::clear_finished() {
  finished_ = false;
  clear_has_finished();
}
 bool AResponses::finished() const {
  // @@protoc_insertion_point(field_get:AResponses.finished)
  return finished_;
}
 void AResponses::set_finished(bool value) {
  set_has_finished();
  finished_ = value;
  // @@protoc_insertion_point(field_set:AResponses.finished)
}

// repeated .AErr error = 5;
int AResponses::error_size() const {
  return error_.size();
}
void AResponses::clear_error() {
  error_.Clear();
}
const ::AErr& AResponses::error(int index) const {
  // @@protoc_insertion_point(field_get:AResponses.error)
  return error_.Get(index);
}
::AErr* AResponses::mutable_error(int index) {
  // @@protoc_insertion_point(field_mutable:AResponses.error)
  return error_.Mutable(index);
}
::AErr* AResponses::add_error() {
  // @@protoc_insertion_point(field_add:AResponses.error)
  return error_.Add();
}
::google::protobuf::RepeatedPtrField< ::AErr >*
AResponses::mutable_error() {
  // @@protoc_insertion_point(field_mutable_list:AResponses.error)
  return &error_;
}
const ::google::protobuf::RepeatedPtrField< ::AErr >&
AResponses::error() const {
  // @@protoc_insertion_point(field_list:AResponses.error)
  return error_;
}

// repeated int64 acks = 6;
int AResponses::acks_size() const {
  return acks_.size();
}
void AResponses::clear_acks() {
  acks_.Clear();
}
 ::google::protobuf::int64 AResponses::acks(int index) const {
  // @@protoc_insertion_point(field_get:AResponses.acks)
  return acks_.Get(index);
}
 void AResponses::set_acks(int index, ::google::protobuf::int64 value) {
  acks_.Set(index, value);
  // @@protoc_insertion_point(field_set:AResponses.acks)
}
 void AResponses::add_acks(::google::protobuf::int64 value) {
  acks_.Add(value);
  // @@protoc_insertion_point(field_add:AResponses.acks)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AResponses::acks() const {
  // @@protoc_insertion_point(field_list:AResponses.acks)
  return acks_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AResponses::mutable_acks() {
  // @@protoc_insertion_point(field_mutable_list:AResponses.acks)
  return &acks_;
}

// repeated .APackage packagestatus = 7;
int AResponses::packagestatus_size() const {
  return packagestatus_.size();
}
void AResponses::clear_packagestatus() {
  packagestatus_.Clear();
}
const ::APackage& AResponses::packagestatus(int index) const {
  // @@protoc_insertion_point(field_get:AResponses.packagestatus)
  return packagestatus_.Get(index);
}
::APackage* AResponses::mutable_packagestatus(int index) {
  // @@protoc_insertion_point(field_mutable:AResponses.packagestatus)
  return packagestatus_.Mutable(index);
}
::APackage* AResponses::add_packagestatus() {
  // @@protoc_insertion_point(field_add:AResponses.packagestatus)
  return packagestatus_.Add();
}
::google::protobuf::RepeatedPtrField< ::APackage >*
AResponses::mutable_packagestatus() {
  // @@protoc_insertion_point(field_mutable_list:AResponses.packagestatus)
  return &packagestatus_;
}
const ::google::protobuf::RepeatedPtrField< ::APackage >&
AResponses::packagestatus() const {
  // @@protoc_insertion_point(field_list:AResponses.packagestatus)
  return packagestatus_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
