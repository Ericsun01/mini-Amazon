// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: amazon_ups.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "amazon_ups.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* UAWorldBuilt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UAWorldBuilt_reflection_ = NULL;
const ::google::protobuf::Descriptor* AUOrder_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AUOrder_reflection_ = NULL;
const ::google::protobuf::Descriptor* AUReqTruck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AUReqTruck_reflection_ = NULL;
const ::google::protobuf::Descriptor* UATruckArrived_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UATruckArrived_reflection_ = NULL;
const ::google::protobuf::Descriptor* AUTruckLoaded_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AUTruckLoaded_reflection_ = NULL;
const ::google::protobuf::Descriptor* UAPackageArrived_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UAPackageArrived_reflection_ = NULL;
const ::google::protobuf::Descriptor* UAErr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UAErr_reflection_ = NULL;
const ::google::protobuf::Descriptor* AUCommands_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AUCommands_reflection_ = NULL;
const ::google::protobuf::Descriptor* UACommands_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UACommands_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_amazon_5fups_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_amazon_5fups_2eproto() {
  protobuf_AddDesc_amazon_5fups_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "amazon_ups.proto");
  GOOGLE_CHECK(file != NULL);
  UAWorldBuilt_descriptor_ = file->message_type(0);
  static const int UAWorldBuilt_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAWorldBuilt, worldid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAWorldBuilt, seqnum_),
  };
  UAWorldBuilt_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UAWorldBuilt_descriptor_,
      UAWorldBuilt::default_instance_,
      UAWorldBuilt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAWorldBuilt, _has_bits_[0]),
      -1,
      -1,
      sizeof(UAWorldBuilt),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAWorldBuilt, _internal_metadata_),
      -1);
  AUOrder_descriptor_ = file->message_type(1);
  static const int AUOrder_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUOrder, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUOrder, locationx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUOrder, locationy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUOrder, username_),
  };
  AUOrder_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AUOrder_descriptor_,
      AUOrder::default_instance_,
      AUOrder_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUOrder, _has_bits_[0]),
      -1,
      -1,
      sizeof(AUOrder),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUOrder, _internal_metadata_),
      -1);
  AUReqTruck_descriptor_ = file->message_type(2);
  static const int AUReqTruck_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUReqTruck, warehouseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUReqTruck, shipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUReqTruck, orders_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUReqTruck, seqnum_),
  };
  AUReqTruck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AUReqTruck_descriptor_,
      AUReqTruck::default_instance_,
      AUReqTruck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUReqTruck, _has_bits_[0]),
      -1,
      -1,
      sizeof(AUReqTruck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUReqTruck, _internal_metadata_),
      -1);
  UATruckArrived_descriptor_ = file->message_type(3);
  static const int UATruckArrived_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UATruckArrived, truckid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UATruckArrived, shipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UATruckArrived, seqnum_),
  };
  UATruckArrived_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UATruckArrived_descriptor_,
      UATruckArrived::default_instance_,
      UATruckArrived_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UATruckArrived, _has_bits_[0]),
      -1,
      -1,
      sizeof(UATruckArrived),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UATruckArrived, _internal_metadata_),
      -1);
  AUTruckLoaded_descriptor_ = file->message_type(4);
  static const int AUTruckLoaded_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUTruckLoaded, truckid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUTruckLoaded, shipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUTruckLoaded, seqnum_),
  };
  AUTruckLoaded_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AUTruckLoaded_descriptor_,
      AUTruckLoaded::default_instance_,
      AUTruckLoaded_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUTruckLoaded, _has_bits_[0]),
      -1,
      -1,
      sizeof(AUTruckLoaded),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUTruckLoaded, _internal_metadata_),
      -1);
  UAPackageArrived_descriptor_ = file->message_type(5);
  static const int UAPackageArrived_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAPackageArrived, shipid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAPackageArrived, seqnum_),
  };
  UAPackageArrived_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UAPackageArrived_descriptor_,
      UAPackageArrived::default_instance_,
      UAPackageArrived_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAPackageArrived, _has_bits_[0]),
      -1,
      -1,
      sizeof(UAPackageArrived),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAPackageArrived, _internal_metadata_),
      -1);
  UAErr_descriptor_ = file->message_type(6);
  static const int UAErr_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAErr, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAErr, originseqnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAErr, seqnum_),
  };
  UAErr_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UAErr_descriptor_,
      UAErr::default_instance_,
      UAErr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAErr, _has_bits_[0]),
      -1,
      -1,
      sizeof(UAErr),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UAErr, _internal_metadata_),
      -1);
  AUCommands_descriptor_ = file->message_type(7);
  static const int AUCommands_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUCommands, requests_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUCommands, truckloaded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUCommands, uaerror_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUCommands, acks_),
  };
  AUCommands_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AUCommands_descriptor_,
      AUCommands::default_instance_,
      AUCommands_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUCommands, _has_bits_[0]),
      -1,
      -1,
      sizeof(AUCommands),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AUCommands, _internal_metadata_),
      -1);
  UACommands_descriptor_ = file->message_type(8);
  static const int UACommands_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UACommands, truckarrived_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UACommands, packagearrived_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UACommands, uaerror_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UACommands, acks_),
  };
  UACommands_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UACommands_descriptor_,
      UACommands::default_instance_,
      UACommands_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UACommands, _has_bits_[0]),
      -1,
      -1,
      sizeof(UACommands),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UACommands, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_amazon_5fups_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UAWorldBuilt_descriptor_, &UAWorldBuilt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AUOrder_descriptor_, &AUOrder::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AUReqTruck_descriptor_, &AUReqTruck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UATruckArrived_descriptor_, &UATruckArrived::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AUTruckLoaded_descriptor_, &AUTruckLoaded::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UAPackageArrived_descriptor_, &UAPackageArrived::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UAErr_descriptor_, &UAErr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AUCommands_descriptor_, &AUCommands::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UACommands_descriptor_, &UACommands::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_amazon_5fups_2eproto() {
  delete UAWorldBuilt::default_instance_;
  delete UAWorldBuilt_reflection_;
  delete AUOrder::default_instance_;
  delete AUOrder_reflection_;
  delete AUReqTruck::default_instance_;
  delete AUReqTruck_reflection_;
  delete UATruckArrived::default_instance_;
  delete UATruckArrived_reflection_;
  delete AUTruckLoaded::default_instance_;
  delete AUTruckLoaded_reflection_;
  delete UAPackageArrived::default_instance_;
  delete UAPackageArrived_reflection_;
  delete UAErr::default_instance_;
  delete UAErr_reflection_;
  delete AUCommands::default_instance_;
  delete AUCommands_reflection_;
  delete UACommands::default_instance_;
  delete UACommands_reflection_;
}

void protobuf_AddDesc_amazon_5fups_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_amazon_5fups_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020amazon_ups.proto\"/\n\014UAWorldBuilt\022\017\n\007wo"
    "rldid\030\001 \002(\005\022\016\n\006seqnum\030\002 \002(\003\"V\n\007AUOrder\022\023"
    "\n\013description\030\001 \002(\t\022\021\n\tlocationx\030\002 \002(\005\022\021"
    "\n\tlocationy\030\003 \002(\005\022\020\n\010username\030\004 \002(\t\"[\n\nA"
    "UReqTruck\022\023\n\013warehouseid\030\001 \002(\005\022\016\n\006shipid"
    "\030\002 \002(\005\022\030\n\006orders\030\003 \002(\0132\010.AUOrder\022\016\n\006seqn"
    "um\030\004 \002(\003\"A\n\016UATruckArrived\022\017\n\007truckid\030\001 "
    "\002(\005\022\016\n\006shipid\030\002 \002(\005\022\016\n\006seqnum\030\003 \002(\003\"@\n\rA"
    "UTruckLoaded\022\017\n\007truckid\030\001 \002(\005\022\016\n\006shipid\030"
    "\002 \002(\005\022\016\n\006seqnum\030\003 \002(\003\"2\n\020UAPackageArrive"
    "d\022\016\n\006shipid\030\001 \002(\003\022\016\n\006seqnum\030\002 \002(\003\":\n\005UAE"
    "rr\022\013\n\003err\030\001 \002(\t\022\024\n\014originseqnum\030\002 \002(\003\022\016\n"
    "\006seqnum\030\003 \002(\003\"w\n\nAUCommands\022\035\n\010requests\030"
    "\001 \003(\0132\013.AUReqTruck\022#\n\013truckloaded\030\002 \003(\0132"
    "\016.AUTruckLoaded\022\027\n\007uaerror\030\003 \003(\0132\006.UAErr"
    "\022\014\n\004acks\030\004 \003(\003\"\205\001\n\nUACommands\022%\n\014truckar"
    "rived\030\001 \003(\0132\017.UATruckArrived\022)\n\016packagea"
    "rrived\030\002 \003(\0132\021.UAPackageArrived\022\027\n\007uaerr"
    "or\030\003 \003(\0132\006.UAErr\022\014\n\004acks\030\004 \003(\003", 750);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "amazon_ups.proto", &protobuf_RegisterTypes);
  UAWorldBuilt::default_instance_ = new UAWorldBuilt();
  AUOrder::default_instance_ = new AUOrder();
  AUReqTruck::default_instance_ = new AUReqTruck();
  UATruckArrived::default_instance_ = new UATruckArrived();
  AUTruckLoaded::default_instance_ = new AUTruckLoaded();
  UAPackageArrived::default_instance_ = new UAPackageArrived();
  UAErr::default_instance_ = new UAErr();
  AUCommands::default_instance_ = new AUCommands();
  UACommands::default_instance_ = new UACommands();
  UAWorldBuilt::default_instance_->InitAsDefaultInstance();
  AUOrder::default_instance_->InitAsDefaultInstance();
  AUReqTruck::default_instance_->InitAsDefaultInstance();
  UATruckArrived::default_instance_->InitAsDefaultInstance();
  AUTruckLoaded::default_instance_->InitAsDefaultInstance();
  UAPackageArrived::default_instance_->InitAsDefaultInstance();
  UAErr::default_instance_->InitAsDefaultInstance();
  AUCommands::default_instance_->InitAsDefaultInstance();
  UACommands::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_amazon_5fups_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_amazon_5fups_2eproto {
  StaticDescriptorInitializer_amazon_5fups_2eproto() {
    protobuf_AddDesc_amazon_5fups_2eproto();
  }
} static_descriptor_initializer_amazon_5fups_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UAWorldBuilt::kWorldidFieldNumber;
const int UAWorldBuilt::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UAWorldBuilt::UAWorldBuilt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UAWorldBuilt)
}

void UAWorldBuilt::InitAsDefaultInstance() {
}

UAWorldBuilt::UAWorldBuilt(const UAWorldBuilt& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UAWorldBuilt)
}

void UAWorldBuilt::SharedCtor() {
  _cached_size_ = 0;
  worldid_ = 0;
  seqnum_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UAWorldBuilt::~UAWorldBuilt() {
  // @@protoc_insertion_point(destructor:UAWorldBuilt)
  SharedDtor();
}

void UAWorldBuilt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UAWorldBuilt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UAWorldBuilt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UAWorldBuilt_descriptor_;
}

const UAWorldBuilt& UAWorldBuilt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amazon_5fups_2eproto();
  return *default_instance_;
}

UAWorldBuilt* UAWorldBuilt::default_instance_ = NULL;

UAWorldBuilt* UAWorldBuilt::New(::google::protobuf::Arena* arena) const {
  UAWorldBuilt* n = new UAWorldBuilt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UAWorldBuilt::Clear() {
// @@protoc_insertion_point(message_clear_start:UAWorldBuilt)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UAWorldBuilt, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UAWorldBuilt*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(seqnum_, worldid_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UAWorldBuilt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UAWorldBuilt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 worldid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &worldid_)));
          set_has_worldid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_seqnum;
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (tag == 16) {
         parse_seqnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
          set_has_seqnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UAWorldBuilt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UAWorldBuilt)
  return false;
#undef DO_
}

void UAWorldBuilt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UAWorldBuilt)
  // required int32 worldid = 1;
  if (has_worldid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->worldid(), output);
  }

  // required int64 seqnum = 2;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UAWorldBuilt)
}

::google::protobuf::uint8* UAWorldBuilt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UAWorldBuilt)
  // required int32 worldid = 1;
  if (has_worldid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->worldid(), target);
  }

  // required int64 seqnum = 2;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UAWorldBuilt)
  return target;
}

int UAWorldBuilt::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UAWorldBuilt)
  int total_size = 0;

  if (has_worldid()) {
    // required int32 worldid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->worldid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
int UAWorldBuilt::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UAWorldBuilt)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 worldid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->worldid());

    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UAWorldBuilt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UAWorldBuilt)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UAWorldBuilt* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UAWorldBuilt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UAWorldBuilt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UAWorldBuilt)
    MergeFrom(*source);
  }
}

void UAWorldBuilt::MergeFrom(const UAWorldBuilt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UAWorldBuilt)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_worldid()) {
      set_worldid(from.worldid());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UAWorldBuilt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UAWorldBuilt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UAWorldBuilt::CopyFrom(const UAWorldBuilt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UAWorldBuilt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UAWorldBuilt::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void UAWorldBuilt::Swap(UAWorldBuilt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UAWorldBuilt::InternalSwap(UAWorldBuilt* other) {
  std::swap(worldid_, other->worldid_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UAWorldBuilt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UAWorldBuilt_descriptor_;
  metadata.reflection = UAWorldBuilt_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UAWorldBuilt

// required int32 worldid = 1;
bool UAWorldBuilt::has_worldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UAWorldBuilt::set_has_worldid() {
  _has_bits_[0] |= 0x00000001u;
}
void UAWorldBuilt::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UAWorldBuilt::clear_worldid() {
  worldid_ = 0;
  clear_has_worldid();
}
 ::google::protobuf::int32 UAWorldBuilt::worldid() const {
  // @@protoc_insertion_point(field_get:UAWorldBuilt.worldid)
  return worldid_;
}
 void UAWorldBuilt::set_worldid(::google::protobuf::int32 value) {
  set_has_worldid();
  worldid_ = value;
  // @@protoc_insertion_point(field_set:UAWorldBuilt.worldid)
}

// required int64 seqnum = 2;
bool UAWorldBuilt::has_seqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UAWorldBuilt::set_has_seqnum() {
  _has_bits_[0] |= 0x00000002u;
}
void UAWorldBuilt::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
void UAWorldBuilt::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
 ::google::protobuf::int64 UAWorldBuilt::seqnum() const {
  // @@protoc_insertion_point(field_get:UAWorldBuilt.seqnum)
  return seqnum_;
}
 void UAWorldBuilt::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:UAWorldBuilt.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AUOrder::kDescriptionFieldNumber;
const int AUOrder::kLocationxFieldNumber;
const int AUOrder::kLocationyFieldNumber;
const int AUOrder::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AUOrder::AUOrder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AUOrder)
}

void AUOrder::InitAsDefaultInstance() {
}

AUOrder::AUOrder(const AUOrder& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AUOrder)
}

void AUOrder::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locationx_ = 0;
  locationy_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AUOrder::~AUOrder() {
  // @@protoc_insertion_point(destructor:AUOrder)
  SharedDtor();
}

void AUOrder::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AUOrder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AUOrder::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AUOrder_descriptor_;
}

const AUOrder& AUOrder::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amazon_5fups_2eproto();
  return *default_instance_;
}

AUOrder* AUOrder::default_instance_ = NULL;

AUOrder* AUOrder::New(::google::protobuf::Arena* arena) const {
  AUOrder* n = new AUOrder;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AUOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:AUOrder)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AUOrder, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AUOrder*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(locationx_, locationy_);
    if (has_description()) {
      description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AUOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AUOrder)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string description = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AUOrder.description");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_locationx;
        break;
      }

      // required int32 locationx = 2;
      case 2: {
        if (tag == 16) {
         parse_locationx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &locationx_)));
          set_has_locationx();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_locationy;
        break;
      }

      // required int32 locationy = 3;
      case 3: {
        if (tag == 24) {
         parse_locationy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &locationy_)));
          set_has_locationy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_username;
        break;
      }

      // required string username = 4;
      case 4: {
        if (tag == 34) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "AUOrder.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AUOrder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AUOrder)
  return false;
#undef DO_
}

void AUOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AUOrder)
  // required string description = 1;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AUOrder.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->description(), output);
  }

  // required int32 locationx = 2;
  if (has_locationx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->locationx(), output);
  }

  // required int32 locationy = 3;
  if (has_locationy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->locationy(), output);
  }

  // required string username = 4;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AUOrder.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->username(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AUOrder)
}

::google::protobuf::uint8* AUOrder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AUOrder)
  // required string description = 1;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AUOrder.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->description(), target);
  }

  // required int32 locationx = 2;
  if (has_locationx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->locationx(), target);
  }

  // required int32 locationy = 3;
  if (has_locationy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->locationy(), target);
  }

  // required string username = 4;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "AUOrder.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->username(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AUOrder)
  return target;
}

int AUOrder::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AUOrder)
  int total_size = 0;

  if (has_description()) {
    // required string description = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  if (has_locationx()) {
    // required int32 locationx = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->locationx());
  }

  if (has_locationy()) {
    // required int32 locationy = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->locationy());
  }

  if (has_username()) {
    // required string username = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  return total_size;
}
int AUOrder::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AUOrder)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string description = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());

    // required int32 locationx = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->locationx());

    // required int32 locationy = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->locationy());

    // required string username = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AUOrder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AUOrder)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AUOrder* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AUOrder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AUOrder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AUOrder)
    MergeFrom(*source);
  }
}

void AUOrder::MergeFrom(const AUOrder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AUOrder)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_description()) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (from.has_locationx()) {
      set_locationx(from.locationx());
    }
    if (from.has_locationy()) {
      set_locationy(from.locationy());
    }
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AUOrder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AUOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AUOrder::CopyFrom(const AUOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AUOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AUOrder::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void AUOrder::Swap(AUOrder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AUOrder::InternalSwap(AUOrder* other) {
  description_.Swap(&other->description_);
  std::swap(locationx_, other->locationx_);
  std::swap(locationy_, other->locationy_);
  username_.Swap(&other->username_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AUOrder::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AUOrder_descriptor_;
  metadata.reflection = AUOrder_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AUOrder

// required string description = 1;
bool AUOrder::has_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AUOrder::set_has_description() {
  _has_bits_[0] |= 0x00000001u;
}
void AUOrder::clear_has_description() {
  _has_bits_[0] &= ~0x00000001u;
}
void AUOrder::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
 const ::std::string& AUOrder::description() const {
  // @@protoc_insertion_point(field_get:AUOrder.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AUOrder::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AUOrder.description)
}
 void AUOrder::set_description(const char* value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AUOrder.description)
}
 void AUOrder::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AUOrder.description)
}
 ::std::string* AUOrder::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:AUOrder.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AUOrder::release_description() {
  // @@protoc_insertion_point(field_release:AUOrder.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AUOrder::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:AUOrder.description)
}

// required int32 locationx = 2;
bool AUOrder::has_locationx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AUOrder::set_has_locationx() {
  _has_bits_[0] |= 0x00000002u;
}
void AUOrder::clear_has_locationx() {
  _has_bits_[0] &= ~0x00000002u;
}
void AUOrder::clear_locationx() {
  locationx_ = 0;
  clear_has_locationx();
}
 ::google::protobuf::int32 AUOrder::locationx() const {
  // @@protoc_insertion_point(field_get:AUOrder.locationx)
  return locationx_;
}
 void AUOrder::set_locationx(::google::protobuf::int32 value) {
  set_has_locationx();
  locationx_ = value;
  // @@protoc_insertion_point(field_set:AUOrder.locationx)
}

// required int32 locationy = 3;
bool AUOrder::has_locationy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AUOrder::set_has_locationy() {
  _has_bits_[0] |= 0x00000004u;
}
void AUOrder::clear_has_locationy() {
  _has_bits_[0] &= ~0x00000004u;
}
void AUOrder::clear_locationy() {
  locationy_ = 0;
  clear_has_locationy();
}
 ::google::protobuf::int32 AUOrder::locationy() const {
  // @@protoc_insertion_point(field_get:AUOrder.locationy)
  return locationy_;
}
 void AUOrder::set_locationy(::google::protobuf::int32 value) {
  set_has_locationy();
  locationy_ = value;
  // @@protoc_insertion_point(field_set:AUOrder.locationy)
}

// required string username = 4;
bool AUOrder::has_username() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AUOrder::set_has_username() {
  _has_bits_[0] |= 0x00000008u;
}
void AUOrder::clear_has_username() {
  _has_bits_[0] &= ~0x00000008u;
}
void AUOrder::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
 const ::std::string& AUOrder::username() const {
  // @@protoc_insertion_point(field_get:AUOrder.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AUOrder::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AUOrder.username)
}
 void AUOrder::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AUOrder.username)
}
 void AUOrder::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AUOrder.username)
}
 ::std::string* AUOrder::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:AUOrder.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AUOrder::release_username() {
  // @@protoc_insertion_point(field_release:AUOrder.username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AUOrder::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:AUOrder.username)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AUReqTruck::kWarehouseidFieldNumber;
const int AUReqTruck::kShipidFieldNumber;
const int AUReqTruck::kOrdersFieldNumber;
const int AUReqTruck::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AUReqTruck::AUReqTruck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AUReqTruck)
}

void AUReqTruck::InitAsDefaultInstance() {
  orders_ = const_cast< ::AUOrder*>(&::AUOrder::default_instance());
}

AUReqTruck::AUReqTruck(const AUReqTruck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AUReqTruck)
}

void AUReqTruck::SharedCtor() {
  _cached_size_ = 0;
  warehouseid_ = 0;
  shipid_ = 0;
  orders_ = NULL;
  seqnum_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AUReqTruck::~AUReqTruck() {
  // @@protoc_insertion_point(destructor:AUReqTruck)
  SharedDtor();
}

void AUReqTruck::SharedDtor() {
  if (this != default_instance_) {
    delete orders_;
  }
}

void AUReqTruck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AUReqTruck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AUReqTruck_descriptor_;
}

const AUReqTruck& AUReqTruck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amazon_5fups_2eproto();
  return *default_instance_;
}

AUReqTruck* AUReqTruck::default_instance_ = NULL;

AUReqTruck* AUReqTruck::New(::google::protobuf::Arena* arena) const {
  AUReqTruck* n = new AUReqTruck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AUReqTruck::Clear() {
// @@protoc_insertion_point(message_clear_start:AUReqTruck)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AUReqTruck, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AUReqTruck*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(warehouseid_, shipid_);
    if (has_orders()) {
      if (orders_ != NULL) orders_->::AUOrder::Clear();
    }
    seqnum_ = GOOGLE_LONGLONG(0);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AUReqTruck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AUReqTruck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 warehouseid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &warehouseid_)));
          set_has_warehouseid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_shipid;
        break;
      }

      // required int32 shipid = 2;
      case 2: {
        if (tag == 16) {
         parse_shipid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shipid_)));
          set_has_shipid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_orders;
        break;
      }

      // required .AUOrder orders = 3;
      case 3: {
        if (tag == 26) {
         parse_orders:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_orders()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_seqnum;
        break;
      }

      // required int64 seqnum = 4;
      case 4: {
        if (tag == 32) {
         parse_seqnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
          set_has_seqnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AUReqTruck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AUReqTruck)
  return false;
#undef DO_
}

void AUReqTruck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AUReqTruck)
  // required int32 warehouseid = 1;
  if (has_warehouseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->warehouseid(), output);
  }

  // required int32 shipid = 2;
  if (has_shipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->shipid(), output);
  }

  // required .AUOrder orders = 3;
  if (has_orders()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->orders_, output);
  }

  // required int64 seqnum = 4;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AUReqTruck)
}

::google::protobuf::uint8* AUReqTruck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AUReqTruck)
  // required int32 warehouseid = 1;
  if (has_warehouseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->warehouseid(), target);
  }

  // required int32 shipid = 2;
  if (has_shipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->shipid(), target);
  }

  // required .AUOrder orders = 3;
  if (has_orders()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->orders_, false, target);
  }

  // required int64 seqnum = 4;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AUReqTruck)
  return target;
}

int AUReqTruck::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AUReqTruck)
  int total_size = 0;

  if (has_warehouseid()) {
    // required int32 warehouseid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->warehouseid());
  }

  if (has_shipid()) {
    // required int32 shipid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shipid());
  }

  if (has_orders()) {
    // required .AUOrder orders = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->orders_);
  }

  if (has_seqnum()) {
    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
int AUReqTruck::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AUReqTruck)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 warehouseid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->warehouseid());

    // required int32 shipid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shipid());

    // required .AUOrder orders = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->orders_);

    // required int64 seqnum = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AUReqTruck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AUReqTruck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AUReqTruck* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AUReqTruck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AUReqTruck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AUReqTruck)
    MergeFrom(*source);
  }
}

void AUReqTruck::MergeFrom(const AUReqTruck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AUReqTruck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_warehouseid()) {
      set_warehouseid(from.warehouseid());
    }
    if (from.has_shipid()) {
      set_shipid(from.shipid());
    }
    if (from.has_orders()) {
      mutable_orders()->::AUOrder::MergeFrom(from.orders());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AUReqTruck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AUReqTruck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AUReqTruck::CopyFrom(const AUReqTruck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AUReqTruck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AUReqTruck::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_orders()) {
    if (!this->orders_->IsInitialized()) return false;
  }
  return true;
}

void AUReqTruck::Swap(AUReqTruck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AUReqTruck::InternalSwap(AUReqTruck* other) {
  std::swap(warehouseid_, other->warehouseid_);
  std::swap(shipid_, other->shipid_);
  std::swap(orders_, other->orders_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AUReqTruck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AUReqTruck_descriptor_;
  metadata.reflection = AUReqTruck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AUReqTruck

// required int32 warehouseid = 1;
bool AUReqTruck::has_warehouseid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AUReqTruck::set_has_warehouseid() {
  _has_bits_[0] |= 0x00000001u;
}
void AUReqTruck::clear_has_warehouseid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AUReqTruck::clear_warehouseid() {
  warehouseid_ = 0;
  clear_has_warehouseid();
}
 ::google::protobuf::int32 AUReqTruck::warehouseid() const {
  // @@protoc_insertion_point(field_get:AUReqTruck.warehouseid)
  return warehouseid_;
}
 void AUReqTruck::set_warehouseid(::google::protobuf::int32 value) {
  set_has_warehouseid();
  warehouseid_ = value;
  // @@protoc_insertion_point(field_set:AUReqTruck.warehouseid)
}

// required int32 shipid = 2;
bool AUReqTruck::has_shipid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AUReqTruck::set_has_shipid() {
  _has_bits_[0] |= 0x00000002u;
}
void AUReqTruck::clear_has_shipid() {
  _has_bits_[0] &= ~0x00000002u;
}
void AUReqTruck::clear_shipid() {
  shipid_ = 0;
  clear_has_shipid();
}
 ::google::protobuf::int32 AUReqTruck::shipid() const {
  // @@protoc_insertion_point(field_get:AUReqTruck.shipid)
  return shipid_;
}
 void AUReqTruck::set_shipid(::google::protobuf::int32 value) {
  set_has_shipid();
  shipid_ = value;
  // @@protoc_insertion_point(field_set:AUReqTruck.shipid)
}

// required .AUOrder orders = 3;
bool AUReqTruck::has_orders() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AUReqTruck::set_has_orders() {
  _has_bits_[0] |= 0x00000004u;
}
void AUReqTruck::clear_has_orders() {
  _has_bits_[0] &= ~0x00000004u;
}
void AUReqTruck::clear_orders() {
  if (orders_ != NULL) orders_->::AUOrder::Clear();
  clear_has_orders();
}
const ::AUOrder& AUReqTruck::orders() const {
  // @@protoc_insertion_point(field_get:AUReqTruck.orders)
  return orders_ != NULL ? *orders_ : *default_instance_->orders_;
}
::AUOrder* AUReqTruck::mutable_orders() {
  set_has_orders();
  if (orders_ == NULL) {
    orders_ = new ::AUOrder;
  }
  // @@protoc_insertion_point(field_mutable:AUReqTruck.orders)
  return orders_;
}
::AUOrder* AUReqTruck::release_orders() {
  // @@protoc_insertion_point(field_release:AUReqTruck.orders)
  clear_has_orders();
  ::AUOrder* temp = orders_;
  orders_ = NULL;
  return temp;
}
void AUReqTruck::set_allocated_orders(::AUOrder* orders) {
  delete orders_;
  orders_ = orders;
  if (orders) {
    set_has_orders();
  } else {
    clear_has_orders();
  }
  // @@protoc_insertion_point(field_set_allocated:AUReqTruck.orders)
}

// required int64 seqnum = 4;
bool AUReqTruck::has_seqnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AUReqTruck::set_has_seqnum() {
  _has_bits_[0] |= 0x00000008u;
}
void AUReqTruck::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000008u;
}
void AUReqTruck::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
 ::google::protobuf::int64 AUReqTruck::seqnum() const {
  // @@protoc_insertion_point(field_get:AUReqTruck.seqnum)
  return seqnum_;
}
 void AUReqTruck::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:AUReqTruck.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UATruckArrived::kTruckidFieldNumber;
const int UATruckArrived::kShipidFieldNumber;
const int UATruckArrived::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UATruckArrived::UATruckArrived()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UATruckArrived)
}

void UATruckArrived::InitAsDefaultInstance() {
}

UATruckArrived::UATruckArrived(const UATruckArrived& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UATruckArrived)
}

void UATruckArrived::SharedCtor() {
  _cached_size_ = 0;
  truckid_ = 0;
  shipid_ = 0;
  seqnum_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UATruckArrived::~UATruckArrived() {
  // @@protoc_insertion_point(destructor:UATruckArrived)
  SharedDtor();
}

void UATruckArrived::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UATruckArrived::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UATruckArrived::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UATruckArrived_descriptor_;
}

const UATruckArrived& UATruckArrived::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amazon_5fups_2eproto();
  return *default_instance_;
}

UATruckArrived* UATruckArrived::default_instance_ = NULL;

UATruckArrived* UATruckArrived::New(::google::protobuf::Arena* arena) const {
  UATruckArrived* n = new UATruckArrived;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UATruckArrived::Clear() {
// @@protoc_insertion_point(message_clear_start:UATruckArrived)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UATruckArrived, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UATruckArrived*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(truckid_, seqnum_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UATruckArrived::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UATruckArrived)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
          set_has_truckid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_shipid;
        break;
      }

      // required int32 shipid = 2;
      case 2: {
        if (tag == 16) {
         parse_shipid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shipid_)));
          set_has_shipid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_seqnum;
        break;
      }

      // required int64 seqnum = 3;
      case 3: {
        if (tag == 24) {
         parse_seqnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
          set_has_seqnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UATruckArrived)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UATruckArrived)
  return false;
#undef DO_
}

void UATruckArrived::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UATruckArrived)
  // required int32 truckid = 1;
  if (has_truckid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // required int32 shipid = 2;
  if (has_shipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->shipid(), output);
  }

  // required int64 seqnum = 3;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UATruckArrived)
}

::google::protobuf::uint8* UATruckArrived::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UATruckArrived)
  // required int32 truckid = 1;
  if (has_truckid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // required int32 shipid = 2;
  if (has_shipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->shipid(), target);
  }

  // required int64 seqnum = 3;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UATruckArrived)
  return target;
}

int UATruckArrived::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UATruckArrived)
  int total_size = 0;

  if (has_truckid()) {
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  if (has_shipid()) {
    // required int32 shipid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shipid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
int UATruckArrived::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UATruckArrived)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

    // required int32 shipid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shipid());

    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UATruckArrived::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UATruckArrived)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UATruckArrived* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UATruckArrived>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UATruckArrived)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UATruckArrived)
    MergeFrom(*source);
  }
}

void UATruckArrived::MergeFrom(const UATruckArrived& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UATruckArrived)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_truckid()) {
      set_truckid(from.truckid());
    }
    if (from.has_shipid()) {
      set_shipid(from.shipid());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UATruckArrived::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UATruckArrived)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UATruckArrived::CopyFrom(const UATruckArrived& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UATruckArrived)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UATruckArrived::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void UATruckArrived::Swap(UATruckArrived* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UATruckArrived::InternalSwap(UATruckArrived* other) {
  std::swap(truckid_, other->truckid_);
  std::swap(shipid_, other->shipid_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UATruckArrived::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UATruckArrived_descriptor_;
  metadata.reflection = UATruckArrived_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UATruckArrived

// required int32 truckid = 1;
bool UATruckArrived::has_truckid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UATruckArrived::set_has_truckid() {
  _has_bits_[0] |= 0x00000001u;
}
void UATruckArrived::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UATruckArrived::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
 ::google::protobuf::int32 UATruckArrived::truckid() const {
  // @@protoc_insertion_point(field_get:UATruckArrived.truckid)
  return truckid_;
}
 void UATruckArrived::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:UATruckArrived.truckid)
}

// required int32 shipid = 2;
bool UATruckArrived::has_shipid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UATruckArrived::set_has_shipid() {
  _has_bits_[0] |= 0x00000002u;
}
void UATruckArrived::clear_has_shipid() {
  _has_bits_[0] &= ~0x00000002u;
}
void UATruckArrived::clear_shipid() {
  shipid_ = 0;
  clear_has_shipid();
}
 ::google::protobuf::int32 UATruckArrived::shipid() const {
  // @@protoc_insertion_point(field_get:UATruckArrived.shipid)
  return shipid_;
}
 void UATruckArrived::set_shipid(::google::protobuf::int32 value) {
  set_has_shipid();
  shipid_ = value;
  // @@protoc_insertion_point(field_set:UATruckArrived.shipid)
}

// required int64 seqnum = 3;
bool UATruckArrived::has_seqnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UATruckArrived::set_has_seqnum() {
  _has_bits_[0] |= 0x00000004u;
}
void UATruckArrived::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000004u;
}
void UATruckArrived::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
 ::google::protobuf::int64 UATruckArrived::seqnum() const {
  // @@protoc_insertion_point(field_get:UATruckArrived.seqnum)
  return seqnum_;
}
 void UATruckArrived::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:UATruckArrived.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AUTruckLoaded::kTruckidFieldNumber;
const int AUTruckLoaded::kShipidFieldNumber;
const int AUTruckLoaded::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AUTruckLoaded::AUTruckLoaded()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AUTruckLoaded)
}

void AUTruckLoaded::InitAsDefaultInstance() {
}

AUTruckLoaded::AUTruckLoaded(const AUTruckLoaded& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AUTruckLoaded)
}

void AUTruckLoaded::SharedCtor() {
  _cached_size_ = 0;
  truckid_ = 0;
  shipid_ = 0;
  seqnum_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AUTruckLoaded::~AUTruckLoaded() {
  // @@protoc_insertion_point(destructor:AUTruckLoaded)
  SharedDtor();
}

void AUTruckLoaded::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AUTruckLoaded::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AUTruckLoaded::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AUTruckLoaded_descriptor_;
}

const AUTruckLoaded& AUTruckLoaded::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amazon_5fups_2eproto();
  return *default_instance_;
}

AUTruckLoaded* AUTruckLoaded::default_instance_ = NULL;

AUTruckLoaded* AUTruckLoaded::New(::google::protobuf::Arena* arena) const {
  AUTruckLoaded* n = new AUTruckLoaded;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AUTruckLoaded::Clear() {
// @@protoc_insertion_point(message_clear_start:AUTruckLoaded)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AUTruckLoaded, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AUTruckLoaded*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(truckid_, seqnum_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AUTruckLoaded::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AUTruckLoaded)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 truckid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &truckid_)));
          set_has_truckid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_shipid;
        break;
      }

      // required int32 shipid = 2;
      case 2: {
        if (tag == 16) {
         parse_shipid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shipid_)));
          set_has_shipid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_seqnum;
        break;
      }

      // required int64 seqnum = 3;
      case 3: {
        if (tag == 24) {
         parse_seqnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
          set_has_seqnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AUTruckLoaded)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AUTruckLoaded)
  return false;
#undef DO_
}

void AUTruckLoaded::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AUTruckLoaded)
  // required int32 truckid = 1;
  if (has_truckid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->truckid(), output);
  }

  // required int32 shipid = 2;
  if (has_shipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->shipid(), output);
  }

  // required int64 seqnum = 3;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AUTruckLoaded)
}

::google::protobuf::uint8* AUTruckLoaded::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AUTruckLoaded)
  // required int32 truckid = 1;
  if (has_truckid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->truckid(), target);
  }

  // required int32 shipid = 2;
  if (has_shipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->shipid(), target);
  }

  // required int64 seqnum = 3;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AUTruckLoaded)
  return target;
}

int AUTruckLoaded::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:AUTruckLoaded)
  int total_size = 0;

  if (has_truckid()) {
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());
  }

  if (has_shipid()) {
    // required int32 shipid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shipid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
int AUTruckLoaded::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AUTruckLoaded)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int32 truckid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->truckid());

    // required int32 shipid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->shipid());

    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AUTruckLoaded::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AUTruckLoaded)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AUTruckLoaded* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AUTruckLoaded>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AUTruckLoaded)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AUTruckLoaded)
    MergeFrom(*source);
  }
}

void AUTruckLoaded::MergeFrom(const AUTruckLoaded& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AUTruckLoaded)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_truckid()) {
      set_truckid(from.truckid());
    }
    if (from.has_shipid()) {
      set_shipid(from.shipid());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AUTruckLoaded::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AUTruckLoaded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AUTruckLoaded::CopyFrom(const AUTruckLoaded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AUTruckLoaded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AUTruckLoaded::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void AUTruckLoaded::Swap(AUTruckLoaded* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AUTruckLoaded::InternalSwap(AUTruckLoaded* other) {
  std::swap(truckid_, other->truckid_);
  std::swap(shipid_, other->shipid_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AUTruckLoaded::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AUTruckLoaded_descriptor_;
  metadata.reflection = AUTruckLoaded_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AUTruckLoaded

// required int32 truckid = 1;
bool AUTruckLoaded::has_truckid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AUTruckLoaded::set_has_truckid() {
  _has_bits_[0] |= 0x00000001u;
}
void AUTruckLoaded::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AUTruckLoaded::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
 ::google::protobuf::int32 AUTruckLoaded::truckid() const {
  // @@protoc_insertion_point(field_get:AUTruckLoaded.truckid)
  return truckid_;
}
 void AUTruckLoaded::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:AUTruckLoaded.truckid)
}

// required int32 shipid = 2;
bool AUTruckLoaded::has_shipid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AUTruckLoaded::set_has_shipid() {
  _has_bits_[0] |= 0x00000002u;
}
void AUTruckLoaded::clear_has_shipid() {
  _has_bits_[0] &= ~0x00000002u;
}
void AUTruckLoaded::clear_shipid() {
  shipid_ = 0;
  clear_has_shipid();
}
 ::google::protobuf::int32 AUTruckLoaded::shipid() const {
  // @@protoc_insertion_point(field_get:AUTruckLoaded.shipid)
  return shipid_;
}
 void AUTruckLoaded::set_shipid(::google::protobuf::int32 value) {
  set_has_shipid();
  shipid_ = value;
  // @@protoc_insertion_point(field_set:AUTruckLoaded.shipid)
}

// required int64 seqnum = 3;
bool AUTruckLoaded::has_seqnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AUTruckLoaded::set_has_seqnum() {
  _has_bits_[0] |= 0x00000004u;
}
void AUTruckLoaded::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000004u;
}
void AUTruckLoaded::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
 ::google::protobuf::int64 AUTruckLoaded::seqnum() const {
  // @@protoc_insertion_point(field_get:AUTruckLoaded.seqnum)
  return seqnum_;
}
 void AUTruckLoaded::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:AUTruckLoaded.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UAPackageArrived::kShipidFieldNumber;
const int UAPackageArrived::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UAPackageArrived::UAPackageArrived()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UAPackageArrived)
}

void UAPackageArrived::InitAsDefaultInstance() {
}

UAPackageArrived::UAPackageArrived(const UAPackageArrived& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UAPackageArrived)
}

void UAPackageArrived::SharedCtor() {
  _cached_size_ = 0;
  shipid_ = GOOGLE_LONGLONG(0);
  seqnum_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UAPackageArrived::~UAPackageArrived() {
  // @@protoc_insertion_point(destructor:UAPackageArrived)
  SharedDtor();
}

void UAPackageArrived::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UAPackageArrived::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UAPackageArrived::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UAPackageArrived_descriptor_;
}

const UAPackageArrived& UAPackageArrived::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amazon_5fups_2eproto();
  return *default_instance_;
}

UAPackageArrived* UAPackageArrived::default_instance_ = NULL;

UAPackageArrived* UAPackageArrived::New(::google::protobuf::Arena* arena) const {
  UAPackageArrived* n = new UAPackageArrived;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UAPackageArrived::Clear() {
// @@protoc_insertion_point(message_clear_start:UAPackageArrived)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UAPackageArrived, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UAPackageArrived*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(shipid_, seqnum_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UAPackageArrived::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UAPackageArrived)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 shipid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shipid_)));
          set_has_shipid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_seqnum;
        break;
      }

      // required int64 seqnum = 2;
      case 2: {
        if (tag == 16) {
         parse_seqnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
          set_has_seqnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UAPackageArrived)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UAPackageArrived)
  return false;
#undef DO_
}

void UAPackageArrived::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UAPackageArrived)
  // required int64 shipid = 1;
  if (has_shipid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shipid(), output);
  }

  // required int64 seqnum = 2;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UAPackageArrived)
}

::google::protobuf::uint8* UAPackageArrived::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UAPackageArrived)
  // required int64 shipid = 1;
  if (has_shipid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shipid(), target);
  }

  // required int64 seqnum = 2;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UAPackageArrived)
  return target;
}

int UAPackageArrived::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UAPackageArrived)
  int total_size = 0;

  if (has_shipid()) {
    // required int64 shipid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
int UAPackageArrived::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UAPackageArrived)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 shipid = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shipid());

    // required int64 seqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UAPackageArrived::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UAPackageArrived)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UAPackageArrived* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UAPackageArrived>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UAPackageArrived)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UAPackageArrived)
    MergeFrom(*source);
  }
}

void UAPackageArrived::MergeFrom(const UAPackageArrived& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UAPackageArrived)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shipid()) {
      set_shipid(from.shipid());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UAPackageArrived::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UAPackageArrived)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UAPackageArrived::CopyFrom(const UAPackageArrived& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UAPackageArrived)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UAPackageArrived::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void UAPackageArrived::Swap(UAPackageArrived* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UAPackageArrived::InternalSwap(UAPackageArrived* other) {
  std::swap(shipid_, other->shipid_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UAPackageArrived::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UAPackageArrived_descriptor_;
  metadata.reflection = UAPackageArrived_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UAPackageArrived

// required int64 shipid = 1;
bool UAPackageArrived::has_shipid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UAPackageArrived::set_has_shipid() {
  _has_bits_[0] |= 0x00000001u;
}
void UAPackageArrived::clear_has_shipid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UAPackageArrived::clear_shipid() {
  shipid_ = GOOGLE_LONGLONG(0);
  clear_has_shipid();
}
 ::google::protobuf::int64 UAPackageArrived::shipid() const {
  // @@protoc_insertion_point(field_get:UAPackageArrived.shipid)
  return shipid_;
}
 void UAPackageArrived::set_shipid(::google::protobuf::int64 value) {
  set_has_shipid();
  shipid_ = value;
  // @@protoc_insertion_point(field_set:UAPackageArrived.shipid)
}

// required int64 seqnum = 2;
bool UAPackageArrived::has_seqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UAPackageArrived::set_has_seqnum() {
  _has_bits_[0] |= 0x00000002u;
}
void UAPackageArrived::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
void UAPackageArrived::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
 ::google::protobuf::int64 UAPackageArrived::seqnum() const {
  // @@protoc_insertion_point(field_get:UAPackageArrived.seqnum)
  return seqnum_;
}
 void UAPackageArrived::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:UAPackageArrived.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UAErr::kErrFieldNumber;
const int UAErr::kOriginseqnumFieldNumber;
const int UAErr::kSeqnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UAErr::UAErr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UAErr)
}

void UAErr::InitAsDefaultInstance() {
}

UAErr::UAErr(const UAErr& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UAErr)
}

void UAErr::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  originseqnum_ = GOOGLE_LONGLONG(0);
  seqnum_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UAErr::~UAErr() {
  // @@protoc_insertion_point(destructor:UAErr)
  SharedDtor();
}

void UAErr::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void UAErr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UAErr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UAErr_descriptor_;
}

const UAErr& UAErr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amazon_5fups_2eproto();
  return *default_instance_;
}

UAErr* UAErr::default_instance_ = NULL;

UAErr* UAErr::New(::google::protobuf::Arena* arena) const {
  UAErr* n = new UAErr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UAErr::Clear() {
// @@protoc_insertion_point(message_clear_start:UAErr)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UAErr, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UAErr*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(originseqnum_, seqnum_);
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UAErr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UAErr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string err = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UAErr.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_originseqnum;
        break;
      }

      // required int64 originseqnum = 2;
      case 2: {
        if (tag == 16) {
         parse_originseqnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &originseqnum_)));
          set_has_originseqnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_seqnum;
        break;
      }

      // required int64 seqnum = 3;
      case 3: {
        if (tag == 24) {
         parse_seqnum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &seqnum_)));
          set_has_seqnum();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UAErr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UAErr)
  return false;
#undef DO_
}

void UAErr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UAErr)
  // required string err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UAErr.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->err(), output);
  }

  // required int64 originseqnum = 2;
  if (has_originseqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->originseqnum(), output);
  }

  // required int64 seqnum = 3;
  if (has_seqnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->seqnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UAErr)
}

::google::protobuf::uint8* UAErr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UAErr)
  // required string err = 1;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UAErr.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->err(), target);
  }

  // required int64 originseqnum = 2;
  if (has_originseqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->originseqnum(), target);
  }

  // required int64 seqnum = 3;
  if (has_seqnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->seqnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UAErr)
  return target;
}

int UAErr::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:UAErr)
  int total_size = 0;

  if (has_err()) {
    // required string err = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (has_originseqnum()) {
    // required int64 originseqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->originseqnum());
  }

  if (has_seqnum()) {
    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());
  }

  return total_size;
}
int UAErr::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UAErr)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string err = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());

    // required int64 originseqnum = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->originseqnum());

    // required int64 seqnum = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->seqnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UAErr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UAErr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UAErr* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UAErr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UAErr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UAErr)
    MergeFrom(*source);
  }
}

void UAErr::MergeFrom(const UAErr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UAErr)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_originseqnum()) {
      set_originseqnum(from.originseqnum());
    }
    if (from.has_seqnum()) {
      set_seqnum(from.seqnum());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UAErr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UAErr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UAErr::CopyFrom(const UAErr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UAErr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UAErr::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void UAErr::Swap(UAErr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UAErr::InternalSwap(UAErr* other) {
  err_.Swap(&other->err_);
  std::swap(originseqnum_, other->originseqnum_);
  std::swap(seqnum_, other->seqnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UAErr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UAErr_descriptor_;
  metadata.reflection = UAErr_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UAErr

// required string err = 1;
bool UAErr::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UAErr::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
void UAErr::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
void UAErr::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
 const ::std::string& UAErr::err() const {
  // @@protoc_insertion_point(field_get:UAErr.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UAErr::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UAErr.err)
}
 void UAErr::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UAErr.err)
}
 void UAErr::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UAErr.err)
}
 ::std::string* UAErr::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:UAErr.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UAErr::release_err() {
  // @@protoc_insertion_point(field_release:UAErr.err)
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UAErr::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:UAErr.err)
}

// required int64 originseqnum = 2;
bool UAErr::has_originseqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UAErr::set_has_originseqnum() {
  _has_bits_[0] |= 0x00000002u;
}
void UAErr::clear_has_originseqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
void UAErr::clear_originseqnum() {
  originseqnum_ = GOOGLE_LONGLONG(0);
  clear_has_originseqnum();
}
 ::google::protobuf::int64 UAErr::originseqnum() const {
  // @@protoc_insertion_point(field_get:UAErr.originseqnum)
  return originseqnum_;
}
 void UAErr::set_originseqnum(::google::protobuf::int64 value) {
  set_has_originseqnum();
  originseqnum_ = value;
  // @@protoc_insertion_point(field_set:UAErr.originseqnum)
}

// required int64 seqnum = 3;
bool UAErr::has_seqnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UAErr::set_has_seqnum() {
  _has_bits_[0] |= 0x00000004u;
}
void UAErr::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000004u;
}
void UAErr::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
 ::google::protobuf::int64 UAErr::seqnum() const {
  // @@protoc_insertion_point(field_get:UAErr.seqnum)
  return seqnum_;
}
 void UAErr::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:UAErr.seqnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AUCommands::kRequestsFieldNumber;
const int AUCommands::kTruckloadedFieldNumber;
const int AUCommands::kUaerrorFieldNumber;
const int AUCommands::kAcksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AUCommands::AUCommands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:AUCommands)
}

void AUCommands::InitAsDefaultInstance() {
}

AUCommands::AUCommands(const AUCommands& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:AUCommands)
}

void AUCommands::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AUCommands::~AUCommands() {
  // @@protoc_insertion_point(destructor:AUCommands)
  SharedDtor();
}

void AUCommands::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AUCommands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AUCommands::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AUCommands_descriptor_;
}

const AUCommands& AUCommands::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amazon_5fups_2eproto();
  return *default_instance_;
}

AUCommands* AUCommands::default_instance_ = NULL;

AUCommands* AUCommands::New(::google::protobuf::Arena* arena) const {
  AUCommands* n = new AUCommands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AUCommands::Clear() {
// @@protoc_insertion_point(message_clear_start:AUCommands)
  requests_.Clear();
  truckloaded_.Clear();
  uaerror_.Clear();
  acks_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AUCommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AUCommands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .AUReqTruck requests = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_requests:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_requests()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_requests;
        if (input->ExpectTag(18)) goto parse_loop_truckloaded;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .AUTruckLoaded truckloaded = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_truckloaded:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_truckloaded()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_truckloaded;
        if (input->ExpectTag(26)) goto parse_loop_uaerror;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .UAErr uaerror = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_uaerror:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_uaerror()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_uaerror;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_acks;
        break;
      }

      // repeated int64 acks = 4;
      case 4: {
        if (tag == 32) {
         parse_acks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 32, input, this->mutable_acks())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_acks())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_acks;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AUCommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AUCommands)
  return false;
#undef DO_
}

void AUCommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AUCommands)
  // repeated .AUReqTruck requests = 1;
  for (unsigned int i = 0, n = this->requests_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->requests(i), output);
  }

  // repeated .AUTruckLoaded truckloaded = 2;
  for (unsigned int i = 0, n = this->truckloaded_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->truckloaded(i), output);
  }

  // repeated .UAErr uaerror = 3;
  for (unsigned int i = 0, n = this->uaerror_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->uaerror(i), output);
  }

  // repeated int64 acks = 4;
  for (int i = 0; i < this->acks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->acks(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AUCommands)
}

::google::protobuf::uint8* AUCommands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AUCommands)
  // repeated .AUReqTruck requests = 1;
  for (unsigned int i = 0, n = this->requests_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->requests(i), false, target);
  }

  // repeated .AUTruckLoaded truckloaded = 2;
  for (unsigned int i = 0, n = this->truckloaded_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->truckloaded(i), false, target);
  }

  // repeated .UAErr uaerror = 3;
  for (unsigned int i = 0, n = this->uaerror_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->uaerror(i), false, target);
  }

  // repeated int64 acks = 4;
  for (int i = 0; i < this->acks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(4, this->acks(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AUCommands)
  return target;
}

int AUCommands::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:AUCommands)
  int total_size = 0;

  // repeated .AUReqTruck requests = 1;
  total_size += 1 * this->requests_size();
  for (int i = 0; i < this->requests_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->requests(i));
  }

  // repeated .AUTruckLoaded truckloaded = 2;
  total_size += 1 * this->truckloaded_size();
  for (int i = 0; i < this->truckloaded_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->truckloaded(i));
  }

  // repeated .UAErr uaerror = 3;
  total_size += 1 * this->uaerror_size();
  for (int i = 0; i < this->uaerror_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->uaerror(i));
  }

  // repeated int64 acks = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->acks_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->acks(i));
    }
    total_size += 1 * this->acks_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AUCommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AUCommands)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AUCommands* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AUCommands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AUCommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AUCommands)
    MergeFrom(*source);
  }
}

void AUCommands::MergeFrom(const AUCommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AUCommands)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  requests_.MergeFrom(from.requests_);
  truckloaded_.MergeFrom(from.truckloaded_);
  uaerror_.MergeFrom(from.uaerror_);
  acks_.MergeFrom(from.acks_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void AUCommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AUCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AUCommands::CopyFrom(const AUCommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AUCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AUCommands::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->requests())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->truckloaded())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->uaerror())) return false;
  return true;
}

void AUCommands::Swap(AUCommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AUCommands::InternalSwap(AUCommands* other) {
  requests_.UnsafeArenaSwap(&other->requests_);
  truckloaded_.UnsafeArenaSwap(&other->truckloaded_);
  uaerror_.UnsafeArenaSwap(&other->uaerror_);
  acks_.UnsafeArenaSwap(&other->acks_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AUCommands::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AUCommands_descriptor_;
  metadata.reflection = AUCommands_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AUCommands

// repeated .AUReqTruck requests = 1;
int AUCommands::requests_size() const {
  return requests_.size();
}
void AUCommands::clear_requests() {
  requests_.Clear();
}
const ::AUReqTruck& AUCommands::requests(int index) const {
  // @@protoc_insertion_point(field_get:AUCommands.requests)
  return requests_.Get(index);
}
::AUReqTruck* AUCommands::mutable_requests(int index) {
  // @@protoc_insertion_point(field_mutable:AUCommands.requests)
  return requests_.Mutable(index);
}
::AUReqTruck* AUCommands::add_requests() {
  // @@protoc_insertion_point(field_add:AUCommands.requests)
  return requests_.Add();
}
::google::protobuf::RepeatedPtrField< ::AUReqTruck >*
AUCommands::mutable_requests() {
  // @@protoc_insertion_point(field_mutable_list:AUCommands.requests)
  return &requests_;
}
const ::google::protobuf::RepeatedPtrField< ::AUReqTruck >&
AUCommands::requests() const {
  // @@protoc_insertion_point(field_list:AUCommands.requests)
  return requests_;
}

// repeated .AUTruckLoaded truckloaded = 2;
int AUCommands::truckloaded_size() const {
  return truckloaded_.size();
}
void AUCommands::clear_truckloaded() {
  truckloaded_.Clear();
}
const ::AUTruckLoaded& AUCommands::truckloaded(int index) const {
  // @@protoc_insertion_point(field_get:AUCommands.truckloaded)
  return truckloaded_.Get(index);
}
::AUTruckLoaded* AUCommands::mutable_truckloaded(int index) {
  // @@protoc_insertion_point(field_mutable:AUCommands.truckloaded)
  return truckloaded_.Mutable(index);
}
::AUTruckLoaded* AUCommands::add_truckloaded() {
  // @@protoc_insertion_point(field_add:AUCommands.truckloaded)
  return truckloaded_.Add();
}
::google::protobuf::RepeatedPtrField< ::AUTruckLoaded >*
AUCommands::mutable_truckloaded() {
  // @@protoc_insertion_point(field_mutable_list:AUCommands.truckloaded)
  return &truckloaded_;
}
const ::google::protobuf::RepeatedPtrField< ::AUTruckLoaded >&
AUCommands::truckloaded() const {
  // @@protoc_insertion_point(field_list:AUCommands.truckloaded)
  return truckloaded_;
}

// repeated .UAErr uaerror = 3;
int AUCommands::uaerror_size() const {
  return uaerror_.size();
}
void AUCommands::clear_uaerror() {
  uaerror_.Clear();
}
const ::UAErr& AUCommands::uaerror(int index) const {
  // @@protoc_insertion_point(field_get:AUCommands.uaerror)
  return uaerror_.Get(index);
}
::UAErr* AUCommands::mutable_uaerror(int index) {
  // @@protoc_insertion_point(field_mutable:AUCommands.uaerror)
  return uaerror_.Mutable(index);
}
::UAErr* AUCommands::add_uaerror() {
  // @@protoc_insertion_point(field_add:AUCommands.uaerror)
  return uaerror_.Add();
}
::google::protobuf::RepeatedPtrField< ::UAErr >*
AUCommands::mutable_uaerror() {
  // @@protoc_insertion_point(field_mutable_list:AUCommands.uaerror)
  return &uaerror_;
}
const ::google::protobuf::RepeatedPtrField< ::UAErr >&
AUCommands::uaerror() const {
  // @@protoc_insertion_point(field_list:AUCommands.uaerror)
  return uaerror_;
}

// repeated int64 acks = 4;
int AUCommands::acks_size() const {
  return acks_.size();
}
void AUCommands::clear_acks() {
  acks_.Clear();
}
 ::google::protobuf::int64 AUCommands::acks(int index) const {
  // @@protoc_insertion_point(field_get:AUCommands.acks)
  return acks_.Get(index);
}
 void AUCommands::set_acks(int index, ::google::protobuf::int64 value) {
  acks_.Set(index, value);
  // @@protoc_insertion_point(field_set:AUCommands.acks)
}
 void AUCommands::add_acks(::google::protobuf::int64 value) {
  acks_.Add(value);
  // @@protoc_insertion_point(field_add:AUCommands.acks)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AUCommands::acks() const {
  // @@protoc_insertion_point(field_list:AUCommands.acks)
  return acks_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AUCommands::mutable_acks() {
  // @@protoc_insertion_point(field_mutable_list:AUCommands.acks)
  return &acks_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UACommands::kTruckarrivedFieldNumber;
const int UACommands::kPackagearrivedFieldNumber;
const int UACommands::kUaerrorFieldNumber;
const int UACommands::kAcksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UACommands::UACommands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UACommands)
}

void UACommands::InitAsDefaultInstance() {
}

UACommands::UACommands(const UACommands& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UACommands)
}

void UACommands::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UACommands::~UACommands() {
  // @@protoc_insertion_point(destructor:UACommands)
  SharedDtor();
}

void UACommands::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UACommands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UACommands::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UACommands_descriptor_;
}

const UACommands& UACommands::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_amazon_5fups_2eproto();
  return *default_instance_;
}

UACommands* UACommands::default_instance_ = NULL;

UACommands* UACommands::New(::google::protobuf::Arena* arena) const {
  UACommands* n = new UACommands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UACommands::Clear() {
// @@protoc_insertion_point(message_clear_start:UACommands)
  truckarrived_.Clear();
  packagearrived_.Clear();
  uaerror_.Clear();
  acks_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UACommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UACommands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .UATruckArrived truckarrived = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_truckarrived:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_truckarrived()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_truckarrived;
        if (input->ExpectTag(18)) goto parse_loop_packagearrived;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .UAPackageArrived packagearrived = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_packagearrived:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_packagearrived()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_packagearrived;
        if (input->ExpectTag(26)) goto parse_loop_uaerror;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .UAErr uaerror = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_uaerror:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_uaerror()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_uaerror;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_acks;
        break;
      }

      // repeated int64 acks = 4;
      case 4: {
        if (tag == 32) {
         parse_acks:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 32, input, this->mutable_acks())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_acks())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_acks;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UACommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UACommands)
  return false;
#undef DO_
}

void UACommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UACommands)
  // repeated .UATruckArrived truckarrived = 1;
  for (unsigned int i = 0, n = this->truckarrived_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->truckarrived(i), output);
  }

  // repeated .UAPackageArrived packagearrived = 2;
  for (unsigned int i = 0, n = this->packagearrived_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->packagearrived(i), output);
  }

  // repeated .UAErr uaerror = 3;
  for (unsigned int i = 0, n = this->uaerror_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->uaerror(i), output);
  }

  // repeated int64 acks = 4;
  for (int i = 0; i < this->acks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->acks(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UACommands)
}

::google::protobuf::uint8* UACommands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UACommands)
  // repeated .UATruckArrived truckarrived = 1;
  for (unsigned int i = 0, n = this->truckarrived_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->truckarrived(i), false, target);
  }

  // repeated .UAPackageArrived packagearrived = 2;
  for (unsigned int i = 0, n = this->packagearrived_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->packagearrived(i), false, target);
  }

  // repeated .UAErr uaerror = 3;
  for (unsigned int i = 0, n = this->uaerror_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->uaerror(i), false, target);
  }

  // repeated int64 acks = 4;
  for (int i = 0; i < this->acks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(4, this->acks(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UACommands)
  return target;
}

int UACommands::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:UACommands)
  int total_size = 0;

  // repeated .UATruckArrived truckarrived = 1;
  total_size += 1 * this->truckarrived_size();
  for (int i = 0; i < this->truckarrived_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->truckarrived(i));
  }

  // repeated .UAPackageArrived packagearrived = 2;
  total_size += 1 * this->packagearrived_size();
  for (int i = 0; i < this->packagearrived_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->packagearrived(i));
  }

  // repeated .UAErr uaerror = 3;
  total_size += 1 * this->uaerror_size();
  for (int i = 0; i < this->uaerror_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->uaerror(i));
  }

  // repeated int64 acks = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->acks_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->acks(i));
    }
    total_size += 1 * this->acks_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UACommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UACommands)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UACommands* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UACommands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UACommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UACommands)
    MergeFrom(*source);
  }
}

void UACommands::MergeFrom(const UACommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UACommands)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  truckarrived_.MergeFrom(from.truckarrived_);
  packagearrived_.MergeFrom(from.packagearrived_);
  uaerror_.MergeFrom(from.uaerror_);
  acks_.MergeFrom(from.acks_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UACommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UACommands::CopyFrom(const UACommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UACommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UACommands::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->truckarrived())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->packagearrived())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->uaerror())) return false;
  return true;
}

void UACommands::Swap(UACommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UACommands::InternalSwap(UACommands* other) {
  truckarrived_.UnsafeArenaSwap(&other->truckarrived_);
  packagearrived_.UnsafeArenaSwap(&other->packagearrived_);
  uaerror_.UnsafeArenaSwap(&other->uaerror_);
  acks_.UnsafeArenaSwap(&other->acks_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UACommands::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UACommands_descriptor_;
  metadata.reflection = UACommands_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UACommands

// repeated .UATruckArrived truckarrived = 1;
int UACommands::truckarrived_size() const {
  return truckarrived_.size();
}
void UACommands::clear_truckarrived() {
  truckarrived_.Clear();
}
const ::UATruckArrived& UACommands::truckarrived(int index) const {
  // @@protoc_insertion_point(field_get:UACommands.truckarrived)
  return truckarrived_.Get(index);
}
::UATruckArrived* UACommands::mutable_truckarrived(int index) {
  // @@protoc_insertion_point(field_mutable:UACommands.truckarrived)
  return truckarrived_.Mutable(index);
}
::UATruckArrived* UACommands::add_truckarrived() {
  // @@protoc_insertion_point(field_add:UACommands.truckarrived)
  return truckarrived_.Add();
}
::google::protobuf::RepeatedPtrField< ::UATruckArrived >*
UACommands::mutable_truckarrived() {
  // @@protoc_insertion_point(field_mutable_list:UACommands.truckarrived)
  return &truckarrived_;
}
const ::google::protobuf::RepeatedPtrField< ::UATruckArrived >&
UACommands::truckarrived() const {
  // @@protoc_insertion_point(field_list:UACommands.truckarrived)
  return truckarrived_;
}

// repeated .UAPackageArrived packagearrived = 2;
int UACommands::packagearrived_size() const {
  return packagearrived_.size();
}
void UACommands::clear_packagearrived() {
  packagearrived_.Clear();
}
const ::UAPackageArrived& UACommands::packagearrived(int index) const {
  // @@protoc_insertion_point(field_get:UACommands.packagearrived)
  return packagearrived_.Get(index);
}
::UAPackageArrived* UACommands::mutable_packagearrived(int index) {
  // @@protoc_insertion_point(field_mutable:UACommands.packagearrived)
  return packagearrived_.Mutable(index);
}
::UAPackageArrived* UACommands::add_packagearrived() {
  // @@protoc_insertion_point(field_add:UACommands.packagearrived)
  return packagearrived_.Add();
}
::google::protobuf::RepeatedPtrField< ::UAPackageArrived >*
UACommands::mutable_packagearrived() {
  // @@protoc_insertion_point(field_mutable_list:UACommands.packagearrived)
  return &packagearrived_;
}
const ::google::protobuf::RepeatedPtrField< ::UAPackageArrived >&
UACommands::packagearrived() const {
  // @@protoc_insertion_point(field_list:UACommands.packagearrived)
  return packagearrived_;
}

// repeated .UAErr uaerror = 3;
int UACommands::uaerror_size() const {
  return uaerror_.size();
}
void UACommands::clear_uaerror() {
  uaerror_.Clear();
}
const ::UAErr& UACommands::uaerror(int index) const {
  // @@protoc_insertion_point(field_get:UACommands.uaerror)
  return uaerror_.Get(index);
}
::UAErr* UACommands::mutable_uaerror(int index) {
  // @@protoc_insertion_point(field_mutable:UACommands.uaerror)
  return uaerror_.Mutable(index);
}
::UAErr* UACommands::add_uaerror() {
  // @@protoc_insertion_point(field_add:UACommands.uaerror)
  return uaerror_.Add();
}
::google::protobuf::RepeatedPtrField< ::UAErr >*
UACommands::mutable_uaerror() {
  // @@protoc_insertion_point(field_mutable_list:UACommands.uaerror)
  return &uaerror_;
}
const ::google::protobuf::RepeatedPtrField< ::UAErr >&
UACommands::uaerror() const {
  // @@protoc_insertion_point(field_list:UACommands.uaerror)
  return uaerror_;
}

// repeated int64 acks = 4;
int UACommands::acks_size() const {
  return acks_.size();
}
void UACommands::clear_acks() {
  acks_.Clear();
}
 ::google::protobuf::int64 UACommands::acks(int index) const {
  // @@protoc_insertion_point(field_get:UACommands.acks)
  return acks_.Get(index);
}
 void UACommands::set_acks(int index, ::google::protobuf::int64 value) {
  acks_.Set(index, value);
  // @@protoc_insertion_point(field_set:UACommands.acks)
}
 void UACommands::add_acks(::google::protobuf::int64 value) {
  acks_.Add(value);
  // @@protoc_insertion_point(field_add:UACommands.acks)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
UACommands::acks() const {
  // @@protoc_insertion_point(field_list:UACommands.acks)
  return acks_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
UACommands::mutable_acks() {
  // @@protoc_insertion_point(field_mutable_list:UACommands.acks)
  return &acks_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
